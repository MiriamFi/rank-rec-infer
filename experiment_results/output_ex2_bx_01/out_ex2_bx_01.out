we are running from this directory: /cluster/home/miriamfi/RankRec
The name of the job is: ex2_bx_01
The job ID is 374422
The job was run on these nodes: idun-02-05
Number of nodes: 1
We are using 1 cores
We are using 1 cores per node
Total of 1 cores

Currently Loaded Modules:
  1) GCCcore/9.3.0
  2) zlib/1.2.11-GCCcore-9.3.0                     (H)
  3) binutils/2.34-GCCcore-9.3.0                   (H)
  4) iccifort/2020.1.217
  5) numactl/2.0.13-GCCcore-9.3.0                  (H)
  6) UCX/1.8.0-GCCcore-9.3.0                       (H)
  7) impi/2019.7.217-iccifort-2020.1.217
  8) iimpi/2020a
  9) imkl/2020.1.217-iimpi-2020a
 10) intel/2020a
 11) bzip2/1.0.8-GCCcore-9.3.0                     (H)
 12) ncurses/6.2-GCCcore-9.3.0                     (H)
 13) libreadline/8.0-GCCcore-9.3.0                 (H)
 14) Tcl/8.6.10-GCCcore-9.3.0                      (H)
 15) SQLite/3.31.1-GCCcore-9.3.0                   (H)
 16) XZ/5.2.5-GCCcore-9.3.0                        (H)
 17) GMP/6.2.0-GCCcore-9.3.0                       (H)
 18) libffi/3.3-GCCcore-9.3.0                      (H)
 19) Python/3.8.2-GCCcore-9.3.0
 20) pybind11/2.4.3-GCCcore-9.3.0-Python-3.8.2     (H)
 21) SciPy-bundle/2020.03-intel-2020a-Python-3.8.2
 22) libpng/1.6.37-GCCcore-9.3.0                   (H)
 23) freetype/2.10.1-GCCcore-9.3.0                 (H)
 24) expat/2.2.9-GCCcore-9.3.0                     (H)
 25) util-linux/2.35-GCCcore-9.3.0                 (H)
 26) fontconfig/2.13.92-GCCcore-9.3.0              (H)
 27) xorg-macros/1.19.2-GCCcore-9.3.0              (H)
 28) libpciaccess/0.16-GCCcore-9.3.0               (H)
 29) X11/20200222-GCCcore-9.3.0                    (H)
 30) Tk/8.6.10-GCCcore-9.3.0                       (H)
 31) Tkinter/3.8.2-GCCcore-9.3.0                   (H)
 32) matplotlib/3.2.1-intel-2020a-Python-3.8.2

  Where:
   H:  Hidden Module

 

Program starting... 

      user_id   age country
0         243   NaN     Usa
1         254  24.0     Usa
2         507   NaN     Usa
3         741  16.0     Usa
4         882  23.0     Usa
...       ...   ...     ...
2671   278188  34.0     Usa
2672   278418   NaN     Usa
2673   278535   NaN     Usa
2674   278633   NaN     Usa
2675   278843  28.0     Usa

[2676 rows x 3 columns]
(2676, 43)
Matrix Dimensions for  X_train1
X_train1  shape: (109053, 2)
X_train1  unique users: 2676
X_train1  unique items: 22813


X_train1  matrix sparsity: 99.8%


Matrix Dimensions for  X_test1
X_test1  shape: (82462, 2)
X_test1  unique users: 2676
X_test1  unique items: 21490


X_test1  matrix sparsity: 99.9%


Matrix Dimensions for  X_train2
X_train2  shape: (191515, 2)
X_train2  unique users: 2676
X_train2  unique items: 24246


X_train2  matrix sparsity: 99.7%


Matrix Dimensions for  X_test2
X_test2  shape: (83788, 2)
X_test2  unique users: 2676
X_test2  unique items: 21595


X_test2  matrix sparsity: 99.9%


Recommender Round 1: 

training epoch: 0
log likelihood: -69971.1171875

training epoch: 1
log likelihood: -63560.26953125

training epoch: 2
log likelihood: -60212.87109375

training epoch: 3
log likelihood: -57684.05859375

training epoch: 4
log likelihood: -54946.5390625

training epoch: 5
log likelihood: -51304.078125

training epoch: 6
log likelihood: -47180.9609375

training epoch: 7
log likelihood: -43045.73046875

training epoch: 8
log likelihood: -39221.2890625

training epoch: 9
log likelihood: -35923.87109375

training epoch: 10
log likelihood: -32932.328125

training epoch: 11
log likelihood: -30707.650390625

training epoch: 12
log likelihood: -28584.5

training epoch: 13
log likelihood: -26885.470703125

training epoch: 14
log likelihood: -25309.869140625

training epoch: 15
log likelihood: -24402.080078125

training epoch: 16
log likelihood: -23276.099609375

training epoch: 17
log likelihood: -22214.23046875

training epoch: 18
log likelihood: -21587.919921875

training epoch: 19
log likelihood: -20844.23046875
recommendations_train shape:  (2676, 50)
Scores shape:  (82462,)
count    79513.000000
mean         0.817567
std          1.301824
min         -3.893116
25%         -0.156316
50%          0.789068
75%          1.790119
max          5.354286
dtype: float64
precision: 0.014
recall: 0.031
hit rate: 0.402
Recommender Round 2: 

training epoch: 0
log likelihood: -118612.203125

training epoch: 1
log likelihood: -106539.4609375

training epoch: 2
log likelihood: -101882.2734375

training epoch: 3
log likelihood: -96793.3828125

training epoch: 4
log likelihood: -90065.578125

training epoch: 5
log likelihood: -82120.5078125

training epoch: 6
log likelihood: -74739.15625

training epoch: 7
log likelihood: -67841.1328125

training epoch: 8
log likelihood: -62287.4296875

training epoch: 9
log likelihood: -57862.03125

training epoch: 10
log likelihood: -54127.58984375

training epoch: 11
log likelihood: -51617.421875

training epoch: 12
log likelihood: -49013.828125

training epoch: 13
log likelihood: -47182.921875

training epoch: 14
log likelihood: -45351.05859375

training epoch: 15
log likelihood: -44152.12109375

training epoch: 16
log likelihood: -42908.0390625

training epoch: 17
log likelihood: -42139.921875

training epoch: 18
log likelihood: -41131.7109375

training epoch: 19
log likelihood: -40311.8515625
recommendations_train shape:  (2676, 50)
Scores shape:  (83788,)
count    83324.000000
mean         1.124596
std          1.355380
min         -3.504759
25%          0.140557
50%          1.174213
75%          2.156247
max          5.157340
dtype: float64
precision: 0.017
recall: 0.037
hit rate: 0.466
unique_isbn:  ['0006511929' '0060520507' '0060930934' ... '3404130081' '3423125772'
 '3499224615']
unique_isbn len:  24485
recs:                  0           1           2   ...          47          48          49
243     0440220602  0380018179  0671867156  ...  0312966806  0446672211  0553280341
254     0375703063  0060987561  0316776963  ...  0743225406  0142004030  0399141928
507     0425132951  0553582755  0451186362  ...  0440226430  0440235596  0399145087
741     0064472795  0312983867  0385335482  ...  0449221490  0385335881  0804106304
882     0385265700  0385336179  0449907481  ...  0316781266  0679772677  0385474016
...            ...         ...         ...  ...         ...         ...         ...
278188  0425151867  0446605484  0515131229  ...  0515133973  0553268880  0345456939
278418  0515131229  0440177049  0440967694  ...  0590435078  0140088393  0743419162
278535  0449907481  0345443284  059035342X  ...  0446364193  0345391055  0380731851
278633  0440226430  0440211727  0971880107  ...  0345443284  014028009X  0425167313
278843  0446605239  0316601950  0971880107  ...  0061097314  0679781587  044023722X

[2676 rows x 50 columns]
recs:          0      1      2      3      4      ...  24480  24481  24482  24483  24484
243       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
254       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
507       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
741       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
882       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
...       ...    ...    ...    ...    ...  ...    ...    ...    ...    ...    ...
278188    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278418    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278535    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278633    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278843    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0

[2676 rows x 24485 columns]
recs shape:  (2676, 24485)
recs:                  0           1           2   ...          47          48          49
243     0385720106  0671867172  0671027360  ...  0446606324  0316899984  0671021001
254     031205436X  1400031346  0060987529  ...  0671027344  0156001314  0812534832
507     0449003795  0385492081  0064400484  ...  0515122408  0553251473  0679447830
741     0440224764  0345378490  0553284118  ...  0743467523  0345422384  0515093556
882     0399501487  0375727345  0156027321  ...  0804106304  0060392452  080410753X
...            ...         ...         ...  ...         ...         ...         ...
278188  0446600253  1558746161  0373825013  ...  038079960X  0394805720  0060176148
278418  0440126894  0440407532  0590417827  ...  0451173317  0440184053  0425083837
278535  0553578693  051512608X  044023722X  ...  0446605581  0380793660  0425136981
278633  0440122090  0425162443  0060928336  ...  0312195516  0440214041  0440241073
278843  0452264464  0971880107  0553272535  ...  0553213172  0316781266  006101351X

[2676 rows x 50 columns]
recs:          0      1      2      3      4      ...  24480  24481  24482  24483  24484
243       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
254       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
507       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
741       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
882       0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
...       ...    ...    ...    ...    ...  ...    ...    ...    ...    ...    ...
278188    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278418    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278535    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278633    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0
278843    0.0    0.0    0.0    0.0    0.0  ...    0.0    0.0    0.0    0.0    0.0

[2676 rows x 24485 columns]
recs shape:  (2676, 24485)
Rec train shape:  (2676, 24485)
Rec test shape:  (2676, 24485)
usa_vs_rest
all_attr:  Counter({'Usa': 1907, 'rest': 769})
all_attr unique:  2
less than 2 samples:  0
2 samples:  0
5 samples or less:  0
train_attr unique:  2
test_attr unique:  2
train_attr:  2676
test_attr:  2676





CV with  dummy  for  usa_vs_rest
train_ix:  [   0    1    2 ... 2671 2674 2675]
train_ix type:  int64
test_ix:  [   4    6   17   28   40   47   50   54   56   58   65   75   81   82
  102  107  108  111  119  120  124  126  165  171  177  188  192  194
  195  196  199  203  205  208  216  218  219  220  224  227  228  231
  233  241  248  255  275  280  282  285  287  291  292  297  299  302
  304  306  314  321  330  335  346  366  367  382  396  397  403  415
  425  428  429  432  438  439  442  452  453  464  477  480  481  486
  487  490  495  499  501  521  525  527  533  535  540  546  547  549
  557  558  559  560  563  569  577  579  586  588  589  598  600  602
  605  610  620  623  638  644  655  660  664  674  675  679  680  683
  685  693  702  703  705  707  708  712  724  725  730  733  736  737
  748  749  757  760  763  764  767  768  771  772  773  783  784  785
  790  791  804  807  808  812  816  817  825  829  836  840  846  852
  854  858  885  895  896  899  906  913  917  918  924  927  932  934
  936  943  954  955  957  968  972  984  985  987  996 1000 1004 1011
 1012 1016 1020 1026 1027 1028 1045 1053 1060 1064 1065 1068 1071 1073
 1084 1087 1104 1123 1128 1129 1131 1132 1135 1138 1142 1145 1146 1147
 1152 1162 1164 1165 1171 1178 1185 1188 1193 1196 1205 1206 1210 1215
 1218 1226 1231 1236 1239 1241 1249 1252 1255 1262 1264 1265 1270 1271
 1282 1286 1287 1290 1292 1299 1310 1316 1323 1326 1328 1333 1334 1335
 1339 1342 1343 1349 1351 1352 1359 1363 1373 1375 1377 1381 1382 1384
 1385 1388 1398 1400 1404 1406 1408 1409 1421 1427 1430 1443 1447 1448
 1452 1453 1475 1490 1504 1505 1506 1514 1515 1525 1526 1529 1533 1534
 1537 1539 1544 1556 1558 1562 1563 1564 1574 1577 1583 1585 1592 1604
 1607 1608 1621 1623 1625 1626 1641 1647 1648 1653 1658 1660 1662 1672
 1674 1675 1678 1685 1688 1695 1696 1697 1702 1703 1709 1711 1720 1721
 1723 1724 1725 1726 1727 1729 1732 1733 1746 1747 1753 1760 1761 1767
 1773 1781 1789 1791 1794 1800 1804 1805 1810 1813 1814 1822 1825 1831
 1836 1843 1857 1881 1885 1891 1895 1906 1915 1918 1921 1922 1934 1935
 1937 1940 1943 1951 1960 1964 1965 1974 1984 1992 2002 2010 2011 2013
 2019 2020 2029 2036 2037 2057 2060 2073 2078 2090 2095 2098 2100 2105
 2110 2112 2120 2121 2123 2134 2135 2136 2139 2156 2160 2161 2166 2169
 2173 2177 2179 2192 2208 2217 2228 2229 2236 2238 2242 2245 2249 2253
 2261 2266 2272 2274 2285 2286 2294 2299 2303 2304 2305 2306 2309 2324
 2332 2337 2339 2343 2344 2358 2362 2366 2371 2372 2379 2387 2388 2390
 2402 2406 2408 2410 2419 2420 2427 2437 2442 2459 2460 2467 2470 2471
 2473 2474 2475 2476 2477 2490 2491 2492 2495 2497 2498 2502 2515 2532
 2549 2550 2551 2552 2555 2570 2577 2578 2580 2583 2584 2585 2588 2590
 2593 2594 2595 2601 2604 2605 2607 2609 2613 2630 2638 2640 2642 2648
 2663 2665 2672 2673]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.728, f1=0.728, auc=0.500, est=0.709, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   0    2    4 ... 2671 2672 2673]
train_ix type:  int64
test_ix:  [   1    3    8   11   16   23   24   30   37   38   45   48   60   67
   68   76   87   91   93   94   98  101  110  115  123  125  130  133
  134  137  140  149  157  158  161  169  173  181  182  186  190  200
  201  206  212  221  223  226  229  230  236  242  250  258  259  260
  268  270  273  288  293  294  301  303  309  325  329  331  338  340
  341  348  351  353  363  364  368  370  372  375  385  389  398  400
  406  414  418  421  422  440  441  443  444  446  447  468  470  476
  484  485  508  510  513  514  517  534  537  544  551  553  555  561
  572  573  576  582  583  585  587  592  607  608  612  613  614  615
  627  628  630  631  632  636  639  642  645  650  653  654  669  671
  672  678  681  692  697  700  713  743  745  747  756  761  774  778
  788  797  800  802  813  820  821  828  839  845  851  855  857  859
  864  866  870  876  877  880  881  891  893  894  898  900  902  911
  916  920  921  925  933  945  958  959  965  970  975  977  979  983
  992  993  994 1002 1009 1032 1036 1039 1043 1044 1070 1077 1080 1089
 1094 1098 1102 1109 1112 1114 1117 1122 1126 1140 1141 1143 1144 1156
 1157 1159 1179 1183 1186 1201 1204 1208 1216 1217 1220 1221 1223 1225
 1228 1230 1237 1246 1247 1248 1260 1268 1272 1279 1281 1283 1294 1296
 1301 1305 1308 1322 1325 1329 1336 1344 1348 1354 1355 1365 1378 1379
 1380 1392 1395 1396 1397 1399 1401 1402 1407 1410 1417 1422 1433 1435
 1436 1438 1441 1442 1450 1454 1456 1461 1462 1466 1468 1471 1480 1481
 1482 1483 1487 1502 1503 1513 1517 1535 1536 1540 1541 1542 1546 1549
 1551 1553 1569 1570 1578 1586 1587 1588 1595 1596 1599 1603 1611 1613
 1624 1628 1629 1631 1634 1642 1646 1649 1652 1654 1657 1659 1661 1664
 1671 1680 1683 1698 1701 1707 1708 1730 1734 1735 1736 1737 1742 1754
 1755 1764 1766 1772 1776 1778 1780 1782 1784 1787 1788 1802 1808 1818
 1823 1827 1828 1832 1842 1846 1848 1853 1858 1861 1863 1864 1865 1877
 1893 1896 1899 1902 1905 1907 1911 1917 1925 1926 1929 1932 1933 1944
 1953 1959 1969 1971 1972 1975 1980 1985 1987 1990 1993 1994 1998 1999
 2007 2009 2017 2018 2027 2038 2039 2042 2046 2051 2056 2065 2067 2074
 2080 2085 2096 2109 2113 2115 2119 2124 2129 2132 2133 2137 2140 2145
 2152 2163 2167 2174 2182 2183 2185 2187 2190 2196 2200 2201 2202 2206
 2213 2221 2225 2232 2234 2235 2237 2239 2240 2243 2252 2262 2270 2295
 2296 2325 2338 2340 2345 2347 2349 2352 2355 2359 2360 2361 2368 2373
 2377 2389 2392 2394 2397 2401 2409 2412 2413 2414 2416 2425 2426 2430
 2435 2441 2447 2448 2449 2452 2453 2454 2456 2457 2466 2472 2478 2479
 2481 2486 2494 2500 2514 2520 2523 2524 2529 2530 2534 2546 2558 2559
 2574 2576 2581 2596 2599 2600 2610 2615 2618 2621 2635 2643 2654 2662
 2667 2674 2675]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.723, f1=0.723, auc=0.500, est=0.710, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   1    2    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   0   12   19   22   27   33   34   35   39   44   46   49   51   53
   59   62   64   73   78   79   80   83   88   90  103  104  128  131
  132  135  136  138  142  146  147  148  154  159  160  163  167  175
  176  198  202  204  210  211  215  239  251  261  262  264  267  274
  278  279  281  283  286  289  295  298  305  308  311  332  336  347
  350  352  359  361  365  369  371  384  386  390  399  401  404  407
  408  409  416  420  424  426  427  434  435  448  456  460  462  471
  478  488  491  494  496  500  507  512  518  526  528  529  531  536
  538  541  556  567  570  571  575  578  581  584  590  593  594  595
  596  597  599  618  619  622  625  629  634  640  641  643  647  649
  659  661  662  698  701  710  711  718  719  722  726  729  739  750
  751  758  766  769  779  789  792  793  799  801  805  809  810  823
  824  827  833  834  847  849  853  860  861  868  872  874  887  888
  890  919  926  931  935  941  946  948  950  951  952  953  969  974
  976  982  986  988  990  995  997 1001 1005 1006 1008 1010 1017 1021
 1034 1037 1040 1047 1051 1054 1057 1059 1069 1079 1081 1082 1085 1086
 1090 1093 1097 1103 1105 1115 1118 1124 1125 1130 1134 1139 1148 1163
 1166 1167 1172 1176 1177 1181 1194 1195 1197 1203 1209 1219 1222 1227
 1232 1233 1243 1245 1263 1269 1276 1289 1291 1293 1297 1304 1307 1314
 1318 1320 1331 1338 1347 1357 1362 1369 1370 1374 1403 1413 1414 1415
 1416 1419 1426 1428 1429 1432 1446 1457 1459 1467 1470 1477 1488 1489
 1494 1496 1500 1501 1509 1511 1518 1519 1520 1532 1545 1548 1550 1552
 1555 1559 1561 1566 1575 1576 1579 1593 1597 1601 1610 1614 1617 1636
 1637 1644 1645 1650 1651 1655 1656 1668 1669 1677 1681 1684 1687 1690
 1691 1699 1705 1710 1728 1731 1748 1758 1759 1765 1768 1770 1777 1783
 1785 1792 1796 1815 1816 1817 1819 1826 1829 1833 1837 1841 1847 1851
 1852 1859 1860 1862 1870 1872 1875 1882 1884 1892 1903 1908 1909 1913
 1919 1923 1928 1930 1931 1938 1947 1950 1956 1957 1958 1961 1962 1966
 1967 1970 1986 1988 1991 2000 2003 2006 2024 2026 2028 2031 2035 2049
 2050 2053 2054 2059 2061 2063 2064 2066 2068 2070 2082 2084 2087 2089
 2093 2102 2106 2111 2117 2122 2131 2142 2143 2147 2151 2154 2155 2157
 2159 2162 2165 2175 2184 2188 2191 2199 2203 2207 2209 2215 2226 2227
 2231 2255 2259 2263 2264 2268 2276 2279 2280 2284 2289 2290 2292 2293
 2298 2301 2310 2313 2314 2317 2320 2322 2329 2330 2334 2336 2341 2342
 2348 2354 2356 2363 2367 2376 2391 2398 2405 2418 2421 2422 2424 2428
 2431 2433 2439 2443 2444 2445 2450 2455 2458 2469 2480 2485 2488 2489
 2493 2496 2503 2510 2511 2512 2517 2519 2525 2531 2539 2541 2545 2547
 2564 2566 2571 2586 2589 2592 2598 2602 2611 2614 2617 2627 2633 2644
 2668 2669 2671]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.705, f1=0.705, auc=0.500, est=0.715, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   0    1    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   2    5    7    9   10   13   21   26   29   31   32   41   43   55
   57   61   66   69   72   74   84   85   89   97   99  106  117  121
  127  139  141  151  156  164  166  170  172  178  180  185  187  189
  191  193  207  209  217  234  237  238  244  254  256  257  265  276
  277  284  300  307  310  315  318  320  322  323  326  328  339  345
  349  354  355  358  360  374  380  381  383  387  388  392  393  394
  395  419  430  433  436  437  445  449  455  457  458  459  463  466
  472  473  474  479  482  483  492  493  498  502  503  504  509  511
  516  520  523  530  543  548  550  554  568  574  603  604  616  635
  646  663  666  670  673  682  686  688  689  694  699  709  720  723
  731  735  740  741  742  744  746  752  754  755  759  765  776  777
  780  781  782  786  787  796  798  815  819  826  830  831  841  842
  862  863  867  875  892  904  909  912  914  922  923  929  930  937
  938  940  942  961  962  966  973  978  981  991 1003 1007 1013 1014
 1015 1023 1024 1029 1030 1035 1038 1041 1048 1050 1056 1058 1066 1074
 1078 1083 1091 1092 1100 1101 1108 1116 1119 1120 1127 1136 1149 1151
 1153 1158 1161 1169 1173 1180 1184 1189 1190 1198 1199 1211 1212 1213
 1224 1229 1234 1238 1240 1242 1244 1250 1256 1257 1259 1266 1267 1273
 1274 1280 1285 1298 1302 1315 1317 1319 1330 1340 1341 1346 1353 1356
 1358 1361 1364 1367 1371 1386 1387 1390 1391 1394 1405 1412 1418 1437
 1440 1444 1451 1458 1463 1464 1476 1479 1497 1498 1507 1508 1510 1512
 1516 1524 1531 1543 1554 1557 1565 1567 1568 1573 1584 1589 1591 1600
 1602 1605 1606 1609 1618 1633 1643 1663 1665 1670 1673 1676 1682 1704
 1713 1714 1716 1718 1719 1743 1744 1749 1750 1751 1769 1775 1779 1786
 1790 1793 1797 1807 1809 1811 1812 1821 1839 1850 1854 1855 1856 1866
 1867 1868 1873 1886 1889 1894 1897 1900 1901 1904 1910 1912 1916 1924
 1941 1945 1946 1948 1952 1954 1955 1963 1973 1976 1977 1978 1989 1995
 1997 2001 2004 2005 2008 2014 2015 2016 2021 2022 2023 2030 2032 2034
 2040 2041 2043 2044 2045 2047 2048 2058 2062 2071 2075 2079 2081 2083
 2086 2088 2094 2097 2099 2101 2104 2107 2108 2114 2116 2118 2126 2128
 2130 2138 2146 2149 2150 2153 2158 2164 2170 2180 2181 2193 2194 2198
 2204 2212 2220 2223 2233 2241 2248 2250 2256 2269 2273 2275 2281 2287
 2291 2297 2302 2308 2312 2316 2318 2319 2323 2328 2331 2333 2335 2346
 2351 2353 2357 2364 2369 2370 2374 2378 2380 2381 2382 2383 2384 2385
 2395 2396 2399 2403 2404 2407 2415 2423 2429 2436 2438 2451 2461 2465
 2482 2484 2487 2501 2505 2507 2508 2509 2521 2527 2528 2535 2538 2540
 2542 2544 2548 2553 2554 2565 2567 2568 2569 2582 2587 2603 2606 2612
 2616 2622 2624 2625 2626 2631 2634 2637 2641 2645 2646 2647 2651 2657
 2658 2664 2666]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.703, f1=0.703, auc=0.500, est=0.715, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   0    1    2 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  113  114  116  118  122  129  143  144
  145  150  152  153  155  162  168  174  179  183  184  197  213  214
  222  225  232  235  240  243  245  246  247  249  252  253  263  266
  269  271  272  290  296  312  313  316  317  319  324  327  333  334
  337  342  343  344  356  357  362  373  376  377  378  379  391  402
  405  410  411  412  413  417  423  431  450  451  454  461  465  467
  469  475  489  497  505  506  515  519  522  524  532  539  542  545
  552  562  564  565  566  580  591  601  606  609  611  617  621  624
  626  633  637  648  651  652  656  657  658  665  667  668  676  677
  684  687  690  691  695  696  704  706  714  715  716  717  721  727
  728  732  734  738  753  762  770  775  794  795  803  806  811  814
  818  822  832  835  837  838  843  844  848  850  856  865  869  871
  873  878  879  882  883  884  886  889  897  901  903  905  907  908
  910  915  928  939  944  947  949  956  960  963  964  967  971  980
  989  998  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1055
 1061 1062 1063 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110
 1111 1113 1121 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182
 1187 1191 1192 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275
 1277 1278 1284 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324
 1327 1332 1337 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411
 1420 1423 1424 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472
 1473 1474 1478 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523
 1527 1528 1530 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598
 1612 1615 1616 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666
 1667 1679 1686 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738
 1739 1740 1741 1745 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799
 1801 1803 1806 1820 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869
 1871 1874 1876 1878 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927
 1936 1939 1942 1949 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052
 2055 2069 2072 2076 2077 2091 2092 2103 2125 2127 2141 2144 2148 2168
 2171 2172 2176 2178 2186 2189 2195 2197 2205 2210 2211 2214 2216 2218
 2219 2222 2224 2230 2244 2246 2247 2251 2254 2257 2258 2260 2265 2267
 2271 2277 2278 2282 2283 2288 2300 2307 2311 2315 2321 2326 2327 2350
 2365 2375 2386 2393 2400 2411 2417 2432 2434 2440 2446 2462 2463 2464
 2468 2483 2499 2504 2506 2513 2516 2518 2522 2526 2533 2536 2537 2543
 2556 2557 2560 2561 2562 2563 2572 2573 2575 2579 2591 2597 2608 2619
 2620 2623 2628 2629 2632 2636 2639 2649 2650 2652 2653 2655 2656 2659
 2660 2661 2670]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.705, f1=0.705, auc=0.500, est=0.715, cfg={'dummy__strategy': 'most_frequent'} 

Accuracy: 0.713 (0.011) 

F1: 0.713 (0.011) 

AUC: 0.500 (0.000) 



CV with  log_reg  for  usa_vs_rest
train_ix:  [   0    1    2 ... 2671 2674 2675]
train_ix type:  int64
test_ix:  [   4    6   17   28   40   47   50   54   56   58   65   75   81   82
  102  107  108  111  119  120  124  126  165  171  177  188  192  194
  195  196  199  203  205  208  216  218  219  220  224  227  228  231
  233  241  248  255  275  280  282  285  287  291  292  297  299  302
  304  306  314  321  330  335  346  366  367  382  396  397  403  415
  425  428  429  432  438  439  442  452  453  464  477  480  481  486
  487  490  495  499  501  521  525  527  533  535  540  546  547  549
  557  558  559  560  563  569  577  579  586  588  589  598  600  602
  605  610  620  623  638  644  655  660  664  674  675  679  680  683
  685  693  702  703  705  707  708  712  724  725  730  733  736  737
  748  749  757  760  763  764  767  768  771  772  773  783  784  785
  790  791  804  807  808  812  816  817  825  829  836  840  846  852
  854  858  885  895  896  899  906  913  917  918  924  927  932  934
  936  943  954  955  957  968  972  984  985  987  996 1000 1004 1011
 1012 1016 1020 1026 1027 1028 1045 1053 1060 1064 1065 1068 1071 1073
 1084 1087 1104 1123 1128 1129 1131 1132 1135 1138 1142 1145 1146 1147
 1152 1162 1164 1165 1171 1178 1185 1188 1193 1196 1205 1206 1210 1215
 1218 1226 1231 1236 1239 1241 1249 1252 1255 1262 1264 1265 1270 1271
 1282 1286 1287 1290 1292 1299 1310 1316 1323 1326 1328 1333 1334 1335
 1339 1342 1343 1349 1351 1352 1359 1363 1373 1375 1377 1381 1382 1384
 1385 1388 1398 1400 1404 1406 1408 1409 1421 1427 1430 1443 1447 1448
 1452 1453 1475 1490 1504 1505 1506 1514 1515 1525 1526 1529 1533 1534
 1537 1539 1544 1556 1558 1562 1563 1564 1574 1577 1583 1585 1592 1604
 1607 1608 1621 1623 1625 1626 1641 1647 1648 1653 1658 1660 1662 1672
 1674 1675 1678 1685 1688 1695 1696 1697 1702 1703 1709 1711 1720 1721
 1723 1724 1725 1726 1727 1729 1732 1733 1746 1747 1753 1760 1761 1767
 1773 1781 1789 1791 1794 1800 1804 1805 1810 1813 1814 1822 1825 1831
 1836 1843 1857 1881 1885 1891 1895 1906 1915 1918 1921 1922 1934 1935
 1937 1940 1943 1951 1960 1964 1965 1974 1984 1992 2002 2010 2011 2013
 2019 2020 2029 2036 2037 2057 2060 2073 2078 2090 2095 2098 2100 2105
 2110 2112 2120 2121 2123 2134 2135 2136 2139 2156 2160 2161 2166 2169
 2173 2177 2179 2192 2208 2217 2228 2229 2236 2238 2242 2245 2249 2253
 2261 2266 2272 2274 2285 2286 2294 2299 2303 2304 2305 2306 2309 2324
 2332 2337 2339 2343 2344 2358 2362 2366 2371 2372 2379 2387 2388 2390
 2402 2406 2408 2410 2419 2420 2427 2437 2442 2459 2460 2467 2470 2471
 2473 2474 2475 2476 2477 2490 2491 2492 2495 2497 2498 2502 2515 2532
 2549 2550 2551 2552 2555 2570 2577 2578 2580 2583 2584 2585 2588 2590
 2593 2594 2595 2601 2604 2605 2607 2609 2613 2630 2638 2640 2642 2648
 2663 2665 2672 2673]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.789, f1=0.789, auc=0.688, est=0.802, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   0    2    4 ... 2671 2672 2673]
train_ix type:  int64
test_ix:  [   1    3    8   11   16   23   24   30   37   38   45   48   60   67
   68   76   87   91   93   94   98  101  110  115  123  125  130  133
  134  137  140  149  157  158  161  169  173  181  182  186  190  200
  201  206  212  221  223  226  229  230  236  242  250  258  259  260
  268  270  273  288  293  294  301  303  309  325  329  331  338  340
  341  348  351  353  363  364  368  370  372  375  385  389  398  400
  406  414  418  421  422  440  441  443  444  446  447  468  470  476
  484  485  508  510  513  514  517  534  537  544  551  553  555  561
  572  573  576  582  583  585  587  592  607  608  612  613  614  615
  627  628  630  631  632  636  639  642  645  650  653  654  669  671
  672  678  681  692  697  700  713  743  745  747  756  761  774  778
  788  797  800  802  813  820  821  828  839  845  851  855  857  859
  864  866  870  876  877  880  881  891  893  894  898  900  902  911
  916  920  921  925  933  945  958  959  965  970  975  977  979  983
  992  993  994 1002 1009 1032 1036 1039 1043 1044 1070 1077 1080 1089
 1094 1098 1102 1109 1112 1114 1117 1122 1126 1140 1141 1143 1144 1156
 1157 1159 1179 1183 1186 1201 1204 1208 1216 1217 1220 1221 1223 1225
 1228 1230 1237 1246 1247 1248 1260 1268 1272 1279 1281 1283 1294 1296
 1301 1305 1308 1322 1325 1329 1336 1344 1348 1354 1355 1365 1378 1379
 1380 1392 1395 1396 1397 1399 1401 1402 1407 1410 1417 1422 1433 1435
 1436 1438 1441 1442 1450 1454 1456 1461 1462 1466 1468 1471 1480 1481
 1482 1483 1487 1502 1503 1513 1517 1535 1536 1540 1541 1542 1546 1549
 1551 1553 1569 1570 1578 1586 1587 1588 1595 1596 1599 1603 1611 1613
 1624 1628 1629 1631 1634 1642 1646 1649 1652 1654 1657 1659 1661 1664
 1671 1680 1683 1698 1701 1707 1708 1730 1734 1735 1736 1737 1742 1754
 1755 1764 1766 1772 1776 1778 1780 1782 1784 1787 1788 1802 1808 1818
 1823 1827 1828 1832 1842 1846 1848 1853 1858 1861 1863 1864 1865 1877
 1893 1896 1899 1902 1905 1907 1911 1917 1925 1926 1929 1932 1933 1944
 1953 1959 1969 1971 1972 1975 1980 1985 1987 1990 1993 1994 1998 1999
 2007 2009 2017 2018 2027 2038 2039 2042 2046 2051 2056 2065 2067 2074
 2080 2085 2096 2109 2113 2115 2119 2124 2129 2132 2133 2137 2140 2145
 2152 2163 2167 2174 2182 2183 2185 2187 2190 2196 2200 2201 2202 2206
 2213 2221 2225 2232 2234 2235 2237 2239 2240 2243 2252 2262 2270 2295
 2296 2325 2338 2340 2345 2347 2349 2352 2355 2359 2360 2361 2368 2373
 2377 2389 2392 2394 2397 2401 2409 2412 2413 2414 2416 2425 2426 2430
 2435 2441 2447 2448 2449 2452 2453 2454 2456 2457 2466 2472 2478 2479
 2481 2486 2494 2500 2514 2520 2523 2524 2529 2530 2534 2546 2558 2559
 2574 2576 2581 2596 2599 2600 2610 2615 2618 2621 2635 2643 2654 2662
 2667 2674 2675]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.789, f1=0.789, auc=0.699, est=0.802, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   1    2    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   0   12   19   22   27   33   34   35   39   44   46   49   51   53
   59   62   64   73   78   79   80   83   88   90  103  104  128  131
  132  135  136  138  142  146  147  148  154  159  160  163  167  175
  176  198  202  204  210  211  215  239  251  261  262  264  267  274
  278  279  281  283  286  289  295  298  305  308  311  332  336  347
  350  352  359  361  365  369  371  384  386  390  399  401  404  407
  408  409  416  420  424  426  427  434  435  448  456  460  462  471
  478  488  491  494  496  500  507  512  518  526  528  529  531  536
  538  541  556  567  570  571  575  578  581  584  590  593  594  595
  596  597  599  618  619  622  625  629  634  640  641  643  647  649
  659  661  662  698  701  710  711  718  719  722  726  729  739  750
  751  758  766  769  779  789  792  793  799  801  805  809  810  823
  824  827  833  834  847  849  853  860  861  868  872  874  887  888
  890  919  926  931  935  941  946  948  950  951  952  953  969  974
  976  982  986  988  990  995  997 1001 1005 1006 1008 1010 1017 1021
 1034 1037 1040 1047 1051 1054 1057 1059 1069 1079 1081 1082 1085 1086
 1090 1093 1097 1103 1105 1115 1118 1124 1125 1130 1134 1139 1148 1163
 1166 1167 1172 1176 1177 1181 1194 1195 1197 1203 1209 1219 1222 1227
 1232 1233 1243 1245 1263 1269 1276 1289 1291 1293 1297 1304 1307 1314
 1318 1320 1331 1338 1347 1357 1362 1369 1370 1374 1403 1413 1414 1415
 1416 1419 1426 1428 1429 1432 1446 1457 1459 1467 1470 1477 1488 1489
 1494 1496 1500 1501 1509 1511 1518 1519 1520 1532 1545 1548 1550 1552
 1555 1559 1561 1566 1575 1576 1579 1593 1597 1601 1610 1614 1617 1636
 1637 1644 1645 1650 1651 1655 1656 1668 1669 1677 1681 1684 1687 1690
 1691 1699 1705 1710 1728 1731 1748 1758 1759 1765 1768 1770 1777 1783
 1785 1792 1796 1815 1816 1817 1819 1826 1829 1833 1837 1841 1847 1851
 1852 1859 1860 1862 1870 1872 1875 1882 1884 1892 1903 1908 1909 1913
 1919 1923 1928 1930 1931 1938 1947 1950 1956 1957 1958 1961 1962 1966
 1967 1970 1986 1988 1991 2000 2003 2006 2024 2026 2028 2031 2035 2049
 2050 2053 2054 2059 2061 2063 2064 2066 2068 2070 2082 2084 2087 2089
 2093 2102 2106 2111 2117 2122 2131 2142 2143 2147 2151 2154 2155 2157
 2159 2162 2165 2175 2184 2188 2191 2199 2203 2207 2209 2215 2226 2227
 2231 2255 2259 2263 2264 2268 2276 2279 2280 2284 2289 2290 2292 2293
 2298 2301 2310 2313 2314 2317 2320 2322 2329 2330 2334 2336 2341 2342
 2348 2354 2356 2363 2367 2376 2391 2398 2405 2418 2421 2422 2424 2428
 2431 2433 2439 2443 2444 2445 2450 2455 2458 2469 2480 2485 2488 2489
 2493 2496 2503 2510 2511 2512 2517 2519 2525 2531 2539 2541 2545 2547
 2564 2566 2571 2586 2589 2592 2598 2602 2611 2614 2617 2627 2633 2644
 2668 2669 2671]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.738, f1=0.738, auc=0.672, est=0.802, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   0    1    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   2    5    7    9   10   13   21   26   29   31   32   41   43   55
   57   61   66   69   72   74   84   85   89   97   99  106  117  121
  127  139  141  151  156  164  166  170  172  178  180  185  187  189
  191  193  207  209  217  234  237  238  244  254  256  257  265  276
  277  284  300  307  310  315  318  320  322  323  326  328  339  345
  349  354  355  358  360  374  380  381  383  387  388  392  393  394
  395  419  430  433  436  437  445  449  455  457  458  459  463  466
  472  473  474  479  482  483  492  493  498  502  503  504  509  511
  516  520  523  530  543  548  550  554  568  574  603  604  616  635
  646  663  666  670  673  682  686  688  689  694  699  709  720  723
  731  735  740  741  742  744  746  752  754  755  759  765  776  777
  780  781  782  786  787  796  798  815  819  826  830  831  841  842
  862  863  867  875  892  904  909  912  914  922  923  929  930  937
  938  940  942  961  962  966  973  978  981  991 1003 1007 1013 1014
 1015 1023 1024 1029 1030 1035 1038 1041 1048 1050 1056 1058 1066 1074
 1078 1083 1091 1092 1100 1101 1108 1116 1119 1120 1127 1136 1149 1151
 1153 1158 1161 1169 1173 1180 1184 1189 1190 1198 1199 1211 1212 1213
 1224 1229 1234 1238 1240 1242 1244 1250 1256 1257 1259 1266 1267 1273
 1274 1280 1285 1298 1302 1315 1317 1319 1330 1340 1341 1346 1353 1356
 1358 1361 1364 1367 1371 1386 1387 1390 1391 1394 1405 1412 1418 1437
 1440 1444 1451 1458 1463 1464 1476 1479 1497 1498 1507 1508 1510 1512
 1516 1524 1531 1543 1554 1557 1565 1567 1568 1573 1584 1589 1591 1600
 1602 1605 1606 1609 1618 1633 1643 1663 1665 1670 1673 1676 1682 1704
 1713 1714 1716 1718 1719 1743 1744 1749 1750 1751 1769 1775 1779 1786
 1790 1793 1797 1807 1809 1811 1812 1821 1839 1850 1854 1855 1856 1866
 1867 1868 1873 1886 1889 1894 1897 1900 1901 1904 1910 1912 1916 1924
 1941 1945 1946 1948 1952 1954 1955 1963 1973 1976 1977 1978 1989 1995
 1997 2001 2004 2005 2008 2014 2015 2016 2021 2022 2023 2030 2032 2034
 2040 2041 2043 2044 2045 2047 2048 2058 2062 2071 2075 2079 2081 2083
 2086 2088 2094 2097 2099 2101 2104 2107 2108 2114 2116 2118 2126 2128
 2130 2138 2146 2149 2150 2153 2158 2164 2170 2180 2181 2193 2194 2198
 2204 2212 2220 2223 2233 2241 2248 2250 2256 2269 2273 2275 2281 2287
 2291 2297 2302 2308 2312 2316 2318 2319 2323 2328 2331 2333 2335 2346
 2351 2353 2357 2364 2369 2370 2374 2378 2380 2381 2382 2383 2384 2385
 2395 2396 2399 2403 2404 2407 2415 2423 2429 2436 2438 2451 2461 2465
 2482 2484 2487 2501 2505 2507 2508 2509 2521 2527 2528 2535 2538 2540
 2542 2544 2548 2553 2554 2565 2567 2568 2569 2582 2587 2603 2606 2612
 2616 2622 2624 2625 2626 2631 2634 2637 2641 2645 2646 2647 2651 2657
 2658 2664 2666]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.766, f1=0.766, auc=0.703, est=0.808, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   0    1    2 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  113  114  116  118  122  129  143  144
  145  150  152  153  155  162  168  174  179  183  184  197  213  214
  222  225  232  235  240  243  245  246  247  249  252  253  263  266
  269  271  272  290  296  312  313  316  317  319  324  327  333  334
  337  342  343  344  356  357  362  373  376  377  378  379  391  402
  405  410  411  412  413  417  423  431  450  451  454  461  465  467
  469  475  489  497  505  506  515  519  522  524  532  539  542  545
  552  562  564  565  566  580  591  601  606  609  611  617  621  624
  626  633  637  648  651  652  656  657  658  665  667  668  676  677
  684  687  690  691  695  696  704  706  714  715  716  717  721  727
  728  732  734  738  753  762  770  775  794  795  803  806  811  814
  818  822  832  835  837  838  843  844  848  850  856  865  869  871
  873  878  879  882  883  884  886  889  897  901  903  905  907  908
  910  915  928  939  944  947  949  956  960  963  964  967  971  980
  989  998  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1055
 1061 1062 1063 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110
 1111 1113 1121 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182
 1187 1191 1192 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275
 1277 1278 1284 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324
 1327 1332 1337 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411
 1420 1423 1424 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472
 1473 1474 1478 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523
 1527 1528 1530 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598
 1612 1615 1616 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666
 1667 1679 1686 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738
 1739 1740 1741 1745 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799
 1801 1803 1806 1820 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869
 1871 1874 1876 1878 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927
 1936 1939 1942 1949 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052
 2055 2069 2072 2076 2077 2091 2092 2103 2125 2127 2141 2144 2148 2168
 2171 2172 2176 2178 2186 2189 2195 2197 2205 2210 2211 2214 2216 2218
 2219 2222 2224 2230 2244 2246 2247 2251 2254 2257 2258 2260 2265 2267
 2271 2277 2278 2282 2283 2288 2300 2307 2311 2315 2321 2326 2327 2350
 2365 2375 2386 2393 2400 2411 2417 2432 2434 2440 2446 2462 2463 2464
 2468 2483 2499 2504 2506 2513 2516 2518 2522 2526 2533 2536 2537 2543
 2556 2557 2560 2561 2562 2563 2572 2573 2575 2579 2591 2597 2608 2619
 2620 2623 2628 2629 2632 2636 2639 2649 2650 2652 2653 2655 2656 2659
 2660 2661 2670]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.776, f1=0.776, auc=0.745, est=0.800, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

Accuracy: 0.772 (0.019) 

F1: 0.772 (0.019) 

AUC: 0.701 (0.024) 



CV with  svc  for  usa_vs_rest
train_ix:  [   0    1    2 ... 2671 2674 2675]
train_ix type:  int64
test_ix:  [   4    6   17   28   40   47   50   54   56   58   65   75   81   82
  102  107  108  111  119  120  124  126  165  171  177  188  192  194
  195  196  199  203  205  208  216  218  219  220  224  227  228  231
  233  241  248  255  275  280  282  285  287  291  292  297  299  302
  304  306  314  321  330  335  346  366  367  382  396  397  403  415
  425  428  429  432  438  439  442  452  453  464  477  480  481  486
  487  490  495  499  501  521  525  527  533  535  540  546  547  549
  557  558  559  560  563  569  577  579  586  588  589  598  600  602
  605  610  620  623  638  644  655  660  664  674  675  679  680  683
  685  693  702  703  705  707  708  712  724  725  730  733  736  737
  748  749  757  760  763  764  767  768  771  772  773  783  784  785
  790  791  804  807  808  812  816  817  825  829  836  840  846  852
  854  858  885  895  896  899  906  913  917  918  924  927  932  934
  936  943  954  955  957  968  972  984  985  987  996 1000 1004 1011
 1012 1016 1020 1026 1027 1028 1045 1053 1060 1064 1065 1068 1071 1073
 1084 1087 1104 1123 1128 1129 1131 1132 1135 1138 1142 1145 1146 1147
 1152 1162 1164 1165 1171 1178 1185 1188 1193 1196 1205 1206 1210 1215
 1218 1226 1231 1236 1239 1241 1249 1252 1255 1262 1264 1265 1270 1271
 1282 1286 1287 1290 1292 1299 1310 1316 1323 1326 1328 1333 1334 1335
 1339 1342 1343 1349 1351 1352 1359 1363 1373 1375 1377 1381 1382 1384
 1385 1388 1398 1400 1404 1406 1408 1409 1421 1427 1430 1443 1447 1448
 1452 1453 1475 1490 1504 1505 1506 1514 1515 1525 1526 1529 1533 1534
 1537 1539 1544 1556 1558 1562 1563 1564 1574 1577 1583 1585 1592 1604
 1607 1608 1621 1623 1625 1626 1641 1647 1648 1653 1658 1660 1662 1672
 1674 1675 1678 1685 1688 1695 1696 1697 1702 1703 1709 1711 1720 1721
 1723 1724 1725 1726 1727 1729 1732 1733 1746 1747 1753 1760 1761 1767
 1773 1781 1789 1791 1794 1800 1804 1805 1810 1813 1814 1822 1825 1831
 1836 1843 1857 1881 1885 1891 1895 1906 1915 1918 1921 1922 1934 1935
 1937 1940 1943 1951 1960 1964 1965 1974 1984 1992 2002 2010 2011 2013
 2019 2020 2029 2036 2037 2057 2060 2073 2078 2090 2095 2098 2100 2105
 2110 2112 2120 2121 2123 2134 2135 2136 2139 2156 2160 2161 2166 2169
 2173 2177 2179 2192 2208 2217 2228 2229 2236 2238 2242 2245 2249 2253
 2261 2266 2272 2274 2285 2286 2294 2299 2303 2304 2305 2306 2309 2324
 2332 2337 2339 2343 2344 2358 2362 2366 2371 2372 2379 2387 2388 2390
 2402 2406 2408 2410 2419 2420 2427 2437 2442 2459 2460 2467 2470 2471
 2473 2474 2475 2476 2477 2490 2491 2492 2495 2497 2498 2502 2515 2532
 2549 2550 2551 2552 2555 2570 2577 2578 2580 2583 2584 2585 2588 2590
 2593 2594 2595 2601 2604 2605 2607 2609 2613 2630 2638 2640 2642 2648
 2663 2665 2672 2673]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.729, f1=0.729, auc=0.677, est=0.771, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   0    2    4 ... 2671 2672 2673]
train_ix type:  int64
test_ix:  [   1    3    8   11   16   23   24   30   37   38   45   48   60   67
   68   76   87   91   93   94   98  101  110  115  123  125  130  133
  134  137  140  149  157  158  161  169  173  181  182  186  190  200
  201  206  212  221  223  226  229  230  236  242  250  258  259  260
  268  270  273  288  293  294  301  303  309  325  329  331  338  340
  341  348  351  353  363  364  368  370  372  375  385  389  398  400
  406  414  418  421  422  440  441  443  444  446  447  468  470  476
  484  485  508  510  513  514  517  534  537  544  551  553  555  561
  572  573  576  582  583  585  587  592  607  608  612  613  614  615
  627  628  630  631  632  636  639  642  645  650  653  654  669  671
  672  678  681  692  697  700  713  743  745  747  756  761  774  778
  788  797  800  802  813  820  821  828  839  845  851  855  857  859
  864  866  870  876  877  880  881  891  893  894  898  900  902  911
  916  920  921  925  933  945  958  959  965  970  975  977  979  983
  992  993  994 1002 1009 1032 1036 1039 1043 1044 1070 1077 1080 1089
 1094 1098 1102 1109 1112 1114 1117 1122 1126 1140 1141 1143 1144 1156
 1157 1159 1179 1183 1186 1201 1204 1208 1216 1217 1220 1221 1223 1225
 1228 1230 1237 1246 1247 1248 1260 1268 1272 1279 1281 1283 1294 1296
 1301 1305 1308 1322 1325 1329 1336 1344 1348 1354 1355 1365 1378 1379
 1380 1392 1395 1396 1397 1399 1401 1402 1407 1410 1417 1422 1433 1435
 1436 1438 1441 1442 1450 1454 1456 1461 1462 1466 1468 1471 1480 1481
 1482 1483 1487 1502 1503 1513 1517 1535 1536 1540 1541 1542 1546 1549
 1551 1553 1569 1570 1578 1586 1587 1588 1595 1596 1599 1603 1611 1613
 1624 1628 1629 1631 1634 1642 1646 1649 1652 1654 1657 1659 1661 1664
 1671 1680 1683 1698 1701 1707 1708 1730 1734 1735 1736 1737 1742 1754
 1755 1764 1766 1772 1776 1778 1780 1782 1784 1787 1788 1802 1808 1818
 1823 1827 1828 1832 1842 1846 1848 1853 1858 1861 1863 1864 1865 1877
 1893 1896 1899 1902 1905 1907 1911 1917 1925 1926 1929 1932 1933 1944
 1953 1959 1969 1971 1972 1975 1980 1985 1987 1990 1993 1994 1998 1999
 2007 2009 2017 2018 2027 2038 2039 2042 2046 2051 2056 2065 2067 2074
 2080 2085 2096 2109 2113 2115 2119 2124 2129 2132 2133 2137 2140 2145
 2152 2163 2167 2174 2182 2183 2185 2187 2190 2196 2200 2201 2202 2206
 2213 2221 2225 2232 2234 2235 2237 2239 2240 2243 2252 2262 2270 2295
 2296 2325 2338 2340 2345 2347 2349 2352 2355 2359 2360 2361 2368 2373
 2377 2389 2392 2394 2397 2401 2409 2412 2413 2414 2416 2425 2426 2430
 2435 2441 2447 2448 2449 2452 2453 2454 2456 2457 2466 2472 2478 2479
 2481 2486 2494 2500 2514 2520 2523 2524 2529 2530 2534 2546 2558 2559
 2574 2576 2581 2596 2599 2600 2610 2615 2618 2621 2635 2643 2654 2662
 2667 2674 2675]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.723, f1=0.723, auc=0.737, est=0.779, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   1    2    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   0   12   19   22   27   33   34   35   39   44   46   49   51   53
   59   62   64   73   78   79   80   83   88   90  103  104  128  131
  132  135  136  138  142  146  147  148  154  159  160  163  167  175
  176  198  202  204  210  211  215  239  251  261  262  264  267  274
  278  279  281  283  286  289  295  298  305  308  311  332  336  347
  350  352  359  361  365  369  371  384  386  390  399  401  404  407
  408  409  416  420  424  426  427  434  435  448  456  460  462  471
  478  488  491  494  496  500  507  512  518  526  528  529  531  536
  538  541  556  567  570  571  575  578  581  584  590  593  594  595
  596  597  599  618  619  622  625  629  634  640  641  643  647  649
  659  661  662  698  701  710  711  718  719  722  726  729  739  750
  751  758  766  769  779  789  792  793  799  801  805  809  810  823
  824  827  833  834  847  849  853  860  861  868  872  874  887  888
  890  919  926  931  935  941  946  948  950  951  952  953  969  974
  976  982  986  988  990  995  997 1001 1005 1006 1008 1010 1017 1021
 1034 1037 1040 1047 1051 1054 1057 1059 1069 1079 1081 1082 1085 1086
 1090 1093 1097 1103 1105 1115 1118 1124 1125 1130 1134 1139 1148 1163
 1166 1167 1172 1176 1177 1181 1194 1195 1197 1203 1209 1219 1222 1227
 1232 1233 1243 1245 1263 1269 1276 1289 1291 1293 1297 1304 1307 1314
 1318 1320 1331 1338 1347 1357 1362 1369 1370 1374 1403 1413 1414 1415
 1416 1419 1426 1428 1429 1432 1446 1457 1459 1467 1470 1477 1488 1489
 1494 1496 1500 1501 1509 1511 1518 1519 1520 1532 1545 1548 1550 1552
 1555 1559 1561 1566 1575 1576 1579 1593 1597 1601 1610 1614 1617 1636
 1637 1644 1645 1650 1651 1655 1656 1668 1669 1677 1681 1684 1687 1690
 1691 1699 1705 1710 1728 1731 1748 1758 1759 1765 1768 1770 1777 1783
 1785 1792 1796 1815 1816 1817 1819 1826 1829 1833 1837 1841 1847 1851
 1852 1859 1860 1862 1870 1872 1875 1882 1884 1892 1903 1908 1909 1913
 1919 1923 1928 1930 1931 1938 1947 1950 1956 1957 1958 1961 1962 1966
 1967 1970 1986 1988 1991 2000 2003 2006 2024 2026 2028 2031 2035 2049
 2050 2053 2054 2059 2061 2063 2064 2066 2068 2070 2082 2084 2087 2089
 2093 2102 2106 2111 2117 2122 2131 2142 2143 2147 2151 2154 2155 2157
 2159 2162 2165 2175 2184 2188 2191 2199 2203 2207 2209 2215 2226 2227
 2231 2255 2259 2263 2264 2268 2276 2279 2280 2284 2289 2290 2292 2293
 2298 2301 2310 2313 2314 2317 2320 2322 2329 2330 2334 2336 2341 2342
 2348 2354 2356 2363 2367 2376 2391 2398 2405 2418 2421 2422 2424 2428
 2431 2433 2439 2443 2444 2445 2450 2455 2458 2469 2480 2485 2488 2489
 2493 2496 2503 2510 2511 2512 2517 2519 2525 2531 2539 2541 2545 2547
 2564 2566 2571 2586 2589 2592 2598 2602 2611 2614 2617 2627 2633 2644
 2668 2669 2671]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.707, f1=0.707, auc=0.698, est=0.778, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   0    1    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   2    5    7    9   10   13   21   26   29   31   32   41   43   55
   57   61   66   69   72   74   84   85   89   97   99  106  117  121
  127  139  141  151  156  164  166  170  172  178  180  185  187  189
  191  193  207  209  217  234  237  238  244  254  256  257  265  276
  277  284  300  307  310  315  318  320  322  323  326  328  339  345
  349  354  355  358  360  374  380  381  383  387  388  392  393  394
  395  419  430  433  436  437  445  449  455  457  458  459  463  466
  472  473  474  479  482  483  492  493  498  502  503  504  509  511
  516  520  523  530  543  548  550  554  568  574  603  604  616  635
  646  663  666  670  673  682  686  688  689  694  699  709  720  723
  731  735  740  741  742  744  746  752  754  755  759  765  776  777
  780  781  782  786  787  796  798  815  819  826  830  831  841  842
  862  863  867  875  892  904  909  912  914  922  923  929  930  937
  938  940  942  961  962  966  973  978  981  991 1003 1007 1013 1014
 1015 1023 1024 1029 1030 1035 1038 1041 1048 1050 1056 1058 1066 1074
 1078 1083 1091 1092 1100 1101 1108 1116 1119 1120 1127 1136 1149 1151
 1153 1158 1161 1169 1173 1180 1184 1189 1190 1198 1199 1211 1212 1213
 1224 1229 1234 1238 1240 1242 1244 1250 1256 1257 1259 1266 1267 1273
 1274 1280 1285 1298 1302 1315 1317 1319 1330 1340 1341 1346 1353 1356
 1358 1361 1364 1367 1371 1386 1387 1390 1391 1394 1405 1412 1418 1437
 1440 1444 1451 1458 1463 1464 1476 1479 1497 1498 1507 1508 1510 1512
 1516 1524 1531 1543 1554 1557 1565 1567 1568 1573 1584 1589 1591 1600
 1602 1605 1606 1609 1618 1633 1643 1663 1665 1670 1673 1676 1682 1704
 1713 1714 1716 1718 1719 1743 1744 1749 1750 1751 1769 1775 1779 1786
 1790 1793 1797 1807 1809 1811 1812 1821 1839 1850 1854 1855 1856 1866
 1867 1868 1873 1886 1889 1894 1897 1900 1901 1904 1910 1912 1916 1924
 1941 1945 1946 1948 1952 1954 1955 1963 1973 1976 1977 1978 1989 1995
 1997 2001 2004 2005 2008 2014 2015 2016 2021 2022 2023 2030 2032 2034
 2040 2041 2043 2044 2045 2047 2048 2058 2062 2071 2075 2079 2081 2083
 2086 2088 2094 2097 2099 2101 2104 2107 2108 2114 2116 2118 2126 2128
 2130 2138 2146 2149 2150 2153 2158 2164 2170 2180 2181 2193 2194 2198
 2204 2212 2220 2223 2233 2241 2248 2250 2256 2269 2273 2275 2281 2287
 2291 2297 2302 2308 2312 2316 2318 2319 2323 2328 2331 2333 2335 2346
 2351 2353 2357 2364 2369 2370 2374 2378 2380 2381 2382 2383 2384 2385
 2395 2396 2399 2403 2404 2407 2415 2423 2429 2436 2438 2451 2461 2465
 2482 2484 2487 2501 2505 2507 2508 2509 2521 2527 2528 2535 2538 2540
 2542 2544 2548 2553 2554 2565 2567 2568 2569 2582 2587 2603 2606 2612
 2616 2622 2624 2625 2626 2631 2634 2637 2641 2645 2646 2647 2651 2657
 2658 2664 2666]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.703, f1=0.703, auc=0.691, est=0.781, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   0    1    2 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  113  114  116  118  122  129  143  144
  145  150  152  153  155  162  168  174  179  183  184  197  213  214
  222  225  232  235  240  243  245  246  247  249  252  253  263  266
  269  271  272  290  296  312  313  316  317  319  324  327  333  334
  337  342  343  344  356  357  362  373  376  377  378  379  391  402
  405  410  411  412  413  417  423  431  450  451  454  461  465  467
  469  475  489  497  505  506  515  519  522  524  532  539  542  545
  552  562  564  565  566  580  591  601  606  609  611  617  621  624
  626  633  637  648  651  652  656  657  658  665  667  668  676  677
  684  687  690  691  695  696  704  706  714  715  716  717  721  727
  728  732  734  738  753  762  770  775  794  795  803  806  811  814
  818  822  832  835  837  838  843  844  848  850  856  865  869  871
  873  878  879  882  883  884  886  889  897  901  903  905  907  908
  910  915  928  939  944  947  949  956  960  963  964  967  971  980
  989  998  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1055
 1061 1062 1063 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110
 1111 1113 1121 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182
 1187 1191 1192 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275
 1277 1278 1284 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324
 1327 1332 1337 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411
 1420 1423 1424 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472
 1473 1474 1478 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523
 1527 1528 1530 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598
 1612 1615 1616 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666
 1667 1679 1686 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738
 1739 1740 1741 1745 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799
 1801 1803 1806 1820 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869
 1871 1874 1876 1878 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927
 1936 1939 1942 1949 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052
 2055 2069 2072 2076 2077 2091 2092 2103 2125 2127 2141 2144 2148 2168
 2171 2172 2176 2178 2186 2189 2195 2197 2205 2210 2211 2214 2216 2218
 2219 2222 2224 2230 2244 2246 2247 2251 2254 2257 2258 2260 2265 2267
 2271 2277 2278 2282 2283 2288 2300 2307 2311 2315 2321 2326 2327 2350
 2365 2375 2386 2393 2400 2411 2417 2432 2434 2440 2446 2462 2463 2464
 2468 2483 2499 2504 2506 2513 2516 2518 2522 2526 2533 2536 2537 2543
 2556 2557 2560 2561 2562 2563 2572 2573 2575 2579 2591 2597 2608 2619
 2620 2623 2628 2629 2632 2636 2639 2649 2650 2652 2653 2655 2656 2659
 2660 2661 2670]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.705, f1=0.705, auc=0.750, est=0.776, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

Accuracy: 0.713 (0.011) 

F1: 0.713 (0.011) 

AUC: 0.711 (0.028) 



CV with  ran_for  for  usa_vs_rest
train_ix:  [   0    1    2 ... 2671 2674 2675]
train_ix type:  int64
test_ix:  [   4    6   17   28   40   47   50   54   56   58   65   75   81   82
  102  107  108  111  119  120  124  126  165  171  177  188  192  194
  195  196  199  203  205  208  216  218  219  220  224  227  228  231
  233  241  248  255  275  280  282  285  287  291  292  297  299  302
  304  306  314  321  330  335  346  366  367  382  396  397  403  415
  425  428  429  432  438  439  442  452  453  464  477  480  481  486
  487  490  495  499  501  521  525  527  533  535  540  546  547  549
  557  558  559  560  563  569  577  579  586  588  589  598  600  602
  605  610  620  623  638  644  655  660  664  674  675  679  680  683
  685  693  702  703  705  707  708  712  724  725  730  733  736  737
  748  749  757  760  763  764  767  768  771  772  773  783  784  785
  790  791  804  807  808  812  816  817  825  829  836  840  846  852
  854  858  885  895  896  899  906  913  917  918  924  927  932  934
  936  943  954  955  957  968  972  984  985  987  996 1000 1004 1011
 1012 1016 1020 1026 1027 1028 1045 1053 1060 1064 1065 1068 1071 1073
 1084 1087 1104 1123 1128 1129 1131 1132 1135 1138 1142 1145 1146 1147
 1152 1162 1164 1165 1171 1178 1185 1188 1193 1196 1205 1206 1210 1215
 1218 1226 1231 1236 1239 1241 1249 1252 1255 1262 1264 1265 1270 1271
 1282 1286 1287 1290 1292 1299 1310 1316 1323 1326 1328 1333 1334 1335
 1339 1342 1343 1349 1351 1352 1359 1363 1373 1375 1377 1381 1382 1384
 1385 1388 1398 1400 1404 1406 1408 1409 1421 1427 1430 1443 1447 1448
 1452 1453 1475 1490 1504 1505 1506 1514 1515 1525 1526 1529 1533 1534
 1537 1539 1544 1556 1558 1562 1563 1564 1574 1577 1583 1585 1592 1604
 1607 1608 1621 1623 1625 1626 1641 1647 1648 1653 1658 1660 1662 1672
 1674 1675 1678 1685 1688 1695 1696 1697 1702 1703 1709 1711 1720 1721
 1723 1724 1725 1726 1727 1729 1732 1733 1746 1747 1753 1760 1761 1767
 1773 1781 1789 1791 1794 1800 1804 1805 1810 1813 1814 1822 1825 1831
 1836 1843 1857 1881 1885 1891 1895 1906 1915 1918 1921 1922 1934 1935
 1937 1940 1943 1951 1960 1964 1965 1974 1984 1992 2002 2010 2011 2013
 2019 2020 2029 2036 2037 2057 2060 2073 2078 2090 2095 2098 2100 2105
 2110 2112 2120 2121 2123 2134 2135 2136 2139 2156 2160 2161 2166 2169
 2173 2177 2179 2192 2208 2217 2228 2229 2236 2238 2242 2245 2249 2253
 2261 2266 2272 2274 2285 2286 2294 2299 2303 2304 2305 2306 2309 2324
 2332 2337 2339 2343 2344 2358 2362 2366 2371 2372 2379 2387 2388 2390
 2402 2406 2408 2410 2419 2420 2427 2437 2442 2459 2460 2467 2470 2471
 2473 2474 2475 2476 2477 2490 2491 2492 2495 2497 2498 2502 2515 2532
 2549 2550 2551 2552 2555 2570 2577 2578 2580 2583 2584 2585 2588 2590
 2593 2594 2595 2601 2604 2605 2607 2609 2613 2630 2638 2640 2642 2648
 2663 2665 2672 2673]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.728, f1=0.728, auc=0.659, est=0.709, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   0    2    4 ... 2671 2672 2673]
train_ix type:  int64
test_ix:  [   1    3    8   11   16   23   24   30   37   38   45   48   60   67
   68   76   87   91   93   94   98  101  110  115  123  125  130  133
  134  137  140  149  157  158  161  169  173  181  182  186  190  200
  201  206  212  221  223  226  229  230  236  242  250  258  259  260
  268  270  273  288  293  294  301  303  309  325  329  331  338  340
  341  348  351  353  363  364  368  370  372  375  385  389  398  400
  406  414  418  421  422  440  441  443  444  446  447  468  470  476
  484  485  508  510  513  514  517  534  537  544  551  553  555  561
  572  573  576  582  583  585  587  592  607  608  612  613  614  615
  627  628  630  631  632  636  639  642  645  650  653  654  669  671
  672  678  681  692  697  700  713  743  745  747  756  761  774  778
  788  797  800  802  813  820  821  828  839  845  851  855  857  859
  864  866  870  876  877  880  881  891  893  894  898  900  902  911
  916  920  921  925  933  945  958  959  965  970  975  977  979  983
  992  993  994 1002 1009 1032 1036 1039 1043 1044 1070 1077 1080 1089
 1094 1098 1102 1109 1112 1114 1117 1122 1126 1140 1141 1143 1144 1156
 1157 1159 1179 1183 1186 1201 1204 1208 1216 1217 1220 1221 1223 1225
 1228 1230 1237 1246 1247 1248 1260 1268 1272 1279 1281 1283 1294 1296
 1301 1305 1308 1322 1325 1329 1336 1344 1348 1354 1355 1365 1378 1379
 1380 1392 1395 1396 1397 1399 1401 1402 1407 1410 1417 1422 1433 1435
 1436 1438 1441 1442 1450 1454 1456 1461 1462 1466 1468 1471 1480 1481
 1482 1483 1487 1502 1503 1513 1517 1535 1536 1540 1541 1542 1546 1549
 1551 1553 1569 1570 1578 1586 1587 1588 1595 1596 1599 1603 1611 1613
 1624 1628 1629 1631 1634 1642 1646 1649 1652 1654 1657 1659 1661 1664
 1671 1680 1683 1698 1701 1707 1708 1730 1734 1735 1736 1737 1742 1754
 1755 1764 1766 1772 1776 1778 1780 1782 1784 1787 1788 1802 1808 1818
 1823 1827 1828 1832 1842 1846 1848 1853 1858 1861 1863 1864 1865 1877
 1893 1896 1899 1902 1905 1907 1911 1917 1925 1926 1929 1932 1933 1944
 1953 1959 1969 1971 1972 1975 1980 1985 1987 1990 1993 1994 1998 1999
 2007 2009 2017 2018 2027 2038 2039 2042 2046 2051 2056 2065 2067 2074
 2080 2085 2096 2109 2113 2115 2119 2124 2129 2132 2133 2137 2140 2145
 2152 2163 2167 2174 2182 2183 2185 2187 2190 2196 2200 2201 2202 2206
 2213 2221 2225 2232 2234 2235 2237 2239 2240 2243 2252 2262 2270 2295
 2296 2325 2338 2340 2345 2347 2349 2352 2355 2359 2360 2361 2368 2373
 2377 2389 2392 2394 2397 2401 2409 2412 2413 2414 2416 2425 2426 2430
 2435 2441 2447 2448 2449 2452 2453 2454 2456 2457 2466 2472 2478 2479
 2481 2486 2494 2500 2514 2520 2523 2524 2529 2530 2534 2546 2558 2559
 2574 2576 2581 2596 2599 2600 2610 2615 2618 2621 2635 2643 2654 2662
 2667 2674 2675]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.723, f1=0.723, auc=0.683, est=0.710, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   1    2    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   0   12   19   22   27   33   34   35   39   44   46   49   51   53
   59   62   64   73   78   79   80   83   88   90  103  104  128  131
  132  135  136  138  142  146  147  148  154  159  160  163  167  175
  176  198  202  204  210  211  215  239  251  261  262  264  267  274
  278  279  281  283  286  289  295  298  305  308  311  332  336  347
  350  352  359  361  365  369  371  384  386  390  399  401  404  407
  408  409  416  420  424  426  427  434  435  448  456  460  462  471
  478  488  491  494  496  500  507  512  518  526  528  529  531  536
  538  541  556  567  570  571  575  578  581  584  590  593  594  595
  596  597  599  618  619  622  625  629  634  640  641  643  647  649
  659  661  662  698  701  710  711  718  719  722  726  729  739  750
  751  758  766  769  779  789  792  793  799  801  805  809  810  823
  824  827  833  834  847  849  853  860  861  868  872  874  887  888
  890  919  926  931  935  941  946  948  950  951  952  953  969  974
  976  982  986  988  990  995  997 1001 1005 1006 1008 1010 1017 1021
 1034 1037 1040 1047 1051 1054 1057 1059 1069 1079 1081 1082 1085 1086
 1090 1093 1097 1103 1105 1115 1118 1124 1125 1130 1134 1139 1148 1163
 1166 1167 1172 1176 1177 1181 1194 1195 1197 1203 1209 1219 1222 1227
 1232 1233 1243 1245 1263 1269 1276 1289 1291 1293 1297 1304 1307 1314
 1318 1320 1331 1338 1347 1357 1362 1369 1370 1374 1403 1413 1414 1415
 1416 1419 1426 1428 1429 1432 1446 1457 1459 1467 1470 1477 1488 1489
 1494 1496 1500 1501 1509 1511 1518 1519 1520 1532 1545 1548 1550 1552
 1555 1559 1561 1566 1575 1576 1579 1593 1597 1601 1610 1614 1617 1636
 1637 1644 1645 1650 1651 1655 1656 1668 1669 1677 1681 1684 1687 1690
 1691 1699 1705 1710 1728 1731 1748 1758 1759 1765 1768 1770 1777 1783
 1785 1792 1796 1815 1816 1817 1819 1826 1829 1833 1837 1841 1847 1851
 1852 1859 1860 1862 1870 1872 1875 1882 1884 1892 1903 1908 1909 1913
 1919 1923 1928 1930 1931 1938 1947 1950 1956 1957 1958 1961 1962 1966
 1967 1970 1986 1988 1991 2000 2003 2006 2024 2026 2028 2031 2035 2049
 2050 2053 2054 2059 2061 2063 2064 2066 2068 2070 2082 2084 2087 2089
 2093 2102 2106 2111 2117 2122 2131 2142 2143 2147 2151 2154 2155 2157
 2159 2162 2165 2175 2184 2188 2191 2199 2203 2207 2209 2215 2226 2227
 2231 2255 2259 2263 2264 2268 2276 2279 2280 2284 2289 2290 2292 2293
 2298 2301 2310 2313 2314 2317 2320 2322 2329 2330 2334 2336 2341 2342
 2348 2354 2356 2363 2367 2376 2391 2398 2405 2418 2421 2422 2424 2428
 2431 2433 2439 2443 2444 2445 2450 2455 2458 2469 2480 2485 2488 2489
 2493 2496 2503 2510 2511 2512 2517 2519 2525 2531 2539 2541 2545 2547
 2564 2566 2571 2586 2589 2592 2598 2602 2611 2614 2617 2627 2633 2644
 2668 2669 2671]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.705, f1=0.705, auc=0.669, est=0.715, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   0    1    3 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [   2    5    7    9   10   13   21   26   29   31   32   41   43   55
   57   61   66   69   72   74   84   85   89   97   99  106  117  121
  127  139  141  151  156  164  166  170  172  178  180  185  187  189
  191  193  207  209  217  234  237  238  244  254  256  257  265  276
  277  284  300  307  310  315  318  320  322  323  326  328  339  345
  349  354  355  358  360  374  380  381  383  387  388  392  393  394
  395  419  430  433  436  437  445  449  455  457  458  459  463  466
  472  473  474  479  482  483  492  493  498  502  503  504  509  511
  516  520  523  530  543  548  550  554  568  574  603  604  616  635
  646  663  666  670  673  682  686  688  689  694  699  709  720  723
  731  735  740  741  742  744  746  752  754  755  759  765  776  777
  780  781  782  786  787  796  798  815  819  826  830  831  841  842
  862  863  867  875  892  904  909  912  914  922  923  929  930  937
  938  940  942  961  962  966  973  978  981  991 1003 1007 1013 1014
 1015 1023 1024 1029 1030 1035 1038 1041 1048 1050 1056 1058 1066 1074
 1078 1083 1091 1092 1100 1101 1108 1116 1119 1120 1127 1136 1149 1151
 1153 1158 1161 1169 1173 1180 1184 1189 1190 1198 1199 1211 1212 1213
 1224 1229 1234 1238 1240 1242 1244 1250 1256 1257 1259 1266 1267 1273
 1274 1280 1285 1298 1302 1315 1317 1319 1330 1340 1341 1346 1353 1356
 1358 1361 1364 1367 1371 1386 1387 1390 1391 1394 1405 1412 1418 1437
 1440 1444 1451 1458 1463 1464 1476 1479 1497 1498 1507 1508 1510 1512
 1516 1524 1531 1543 1554 1557 1565 1567 1568 1573 1584 1589 1591 1600
 1602 1605 1606 1609 1618 1633 1643 1663 1665 1670 1673 1676 1682 1704
 1713 1714 1716 1718 1719 1743 1744 1749 1750 1751 1769 1775 1779 1786
 1790 1793 1797 1807 1809 1811 1812 1821 1839 1850 1854 1855 1856 1866
 1867 1868 1873 1886 1889 1894 1897 1900 1901 1904 1910 1912 1916 1924
 1941 1945 1946 1948 1952 1954 1955 1963 1973 1976 1977 1978 1989 1995
 1997 2001 2004 2005 2008 2014 2015 2016 2021 2022 2023 2030 2032 2034
 2040 2041 2043 2044 2045 2047 2048 2058 2062 2071 2075 2079 2081 2083
 2086 2088 2094 2097 2099 2101 2104 2107 2108 2114 2116 2118 2126 2128
 2130 2138 2146 2149 2150 2153 2158 2164 2170 2180 2181 2193 2194 2198
 2204 2212 2220 2223 2233 2241 2248 2250 2256 2269 2273 2275 2281 2287
 2291 2297 2302 2308 2312 2316 2318 2319 2323 2328 2331 2333 2335 2346
 2351 2353 2357 2364 2369 2370 2374 2378 2380 2381 2382 2383 2384 2385
 2395 2396 2399 2403 2404 2407 2415 2423 2429 2436 2438 2451 2461 2465
 2482 2484 2487 2501 2505 2507 2508 2509 2521 2527 2528 2535 2538 2540
 2542 2544 2548 2553 2554 2565 2567 2568 2569 2582 2587 2603 2606 2612
 2616 2622 2624 2625 2626 2631 2634 2637 2641 2645 2646 2647 2651 2657
 2658 2664 2666]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.703, f1=0.703, auc=0.669, est=0.715, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   0    1    2 ... 2673 2674 2675]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  113  114  116  118  122  129  143  144
  145  150  152  153  155  162  168  174  179  183  184  197  213  214
  222  225  232  235  240  243  245  246  247  249  252  253  263  266
  269  271  272  290  296  312  313  316  317  319  324  327  333  334
  337  342  343  344  356  357  362  373  376  377  378  379  391  402
  405  410  411  412  413  417  423  431  450  451  454  461  465  467
  469  475  489  497  505  506  515  519  522  524  532  539  542  545
  552  562  564  565  566  580  591  601  606  609  611  617  621  624
  626  633  637  648  651  652  656  657  658  665  667  668  676  677
  684  687  690  691  695  696  704  706  714  715  716  717  721  727
  728  732  734  738  753  762  770  775  794  795  803  806  811  814
  818  822  832  835  837  838  843  844  848  850  856  865  869  871
  873  878  879  882  883  884  886  889  897  901  903  905  907  908
  910  915  928  939  944  947  949  956  960  963  964  967  971  980
  989  998  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1055
 1061 1062 1063 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110
 1111 1113 1121 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182
 1187 1191 1192 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275
 1277 1278 1284 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324
 1327 1332 1337 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411
 1420 1423 1424 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472
 1473 1474 1478 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523
 1527 1528 1530 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598
 1612 1615 1616 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666
 1667 1679 1686 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738
 1739 1740 1741 1745 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799
 1801 1803 1806 1820 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869
 1871 1874 1876 1878 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927
 1936 1939 1942 1949 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052
 2055 2069 2072 2076 2077 2091 2092 2103 2125 2127 2141 2144 2148 2168
 2171 2172 2176 2178 2186 2189 2195 2197 2205 2210 2211 2214 2216 2218
 2219 2222 2224 2230 2244 2246 2247 2251 2254 2257 2258 2260 2265 2267
 2271 2277 2278 2282 2283 2288 2300 2307 2311 2315 2321 2326 2327 2350
 2365 2375 2386 2393 2400 2411 2417 2432 2434 2440 2446 2462 2463 2464
 2468 2483 2499 2504 2506 2513 2516 2518 2522 2526 2533 2536 2537 2543
 2556 2557 2560 2561 2562 2563 2572 2573 2575 2579 2591 2597 2608 2619
 2620 2623 2628 2629 2632 2636 2639 2649 2650 2652 2653 2655 2656 2659
 2660 2661 2670]
X_r1.index:  Int64Index([   243,    254,    507,    741,    882,    929,   1131,   1424,
              1435,   1733,
            ...
            277639, 277928, 277965, 278137, 278144, 278188, 278418, 278535,
            278633, 278843],
           dtype='int64', length=2676)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.705, f1=0.705, auc=0.737, est=0.715, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

Accuracy: 0.713 (0.011) 

F1: 0.713 (0.011) 

AUC: 0.684 (0.028) 

Linux idun-02-05 4.18.0-193.el8.x86_64 #1 SMP Fri May 8 10:59:10 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
