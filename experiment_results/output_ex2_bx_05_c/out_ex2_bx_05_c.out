we are running from this directory: /cluster/home/miriamfi/RankRec
The name of the job is: ex2_bx_05_c
The job ID is 373785
The job was run on these nodes: idun-03-20
Number of nodes: 1
We are using 1 cores
We are using 1 cores per node
Total of 1 cores

Currently Loaded Modules:
  1) GCCcore/9.3.0
  2) zlib/1.2.11-GCCcore-9.3.0                     (H)
  3) binutils/2.34-GCCcore-9.3.0                   (H)
  4) iccifort/2020.1.217
  5) numactl/2.0.13-GCCcore-9.3.0                  (H)
  6) UCX/1.8.0-GCCcore-9.3.0                       (H)
  7) impi/2019.7.217-iccifort-2020.1.217
  8) iimpi/2020a
  9) imkl/2020.1.217-iimpi-2020a
 10) intel/2020a
 11) bzip2/1.0.8-GCCcore-9.3.0                     (H)
 12) ncurses/6.2-GCCcore-9.3.0                     (H)
 13) libreadline/8.0-GCCcore-9.3.0                 (H)
 14) Tcl/8.6.10-GCCcore-9.3.0                      (H)
 15) SQLite/3.31.1-GCCcore-9.3.0                   (H)
 16) XZ/5.2.5-GCCcore-9.3.0                        (H)
 17) GMP/6.2.0-GCCcore-9.3.0                       (H)
 18) libffi/3.3-GCCcore-9.3.0                      (H)
 19) Python/3.8.2-GCCcore-9.3.0
 20) pybind11/2.4.3-GCCcore-9.3.0-Python-3.8.2     (H)
 21) SciPy-bundle/2020.03-intel-2020a-Python-3.8.2
 22) libpng/1.6.37-GCCcore-9.3.0                   (H)
 23) freetype/2.10.1-GCCcore-9.3.0                 (H)
 24) expat/2.2.9-GCCcore-9.3.0                     (H)
 25) util-linux/2.35-GCCcore-9.3.0                 (H)
 26) fontconfig/2.13.92-GCCcore-9.3.0              (H)
 27) xorg-macros/1.19.2-GCCcore-9.3.0              (H)
 28) libpciaccess/0.16-GCCcore-9.3.0               (H)
 29) X11/20200222-GCCcore-9.3.0                    (H)
 30) Tk/8.6.10-GCCcore-9.3.0                       (H)
 31) Tkinter/3.8.2-GCCcore-9.3.0                   (H)
 32) matplotlib/3.2.1-intel-2020a-Python-3.8.2

  Where:
   H:  Hidden Module

 

Program starting... 

      user_id   age country
0         243   NaN     Usa
1         254  24.0     Usa
2         383   NaN     Usa
3         487   NaN     Usa
4         507   NaN     Usa
...       ...   ...     ...
3832   278418   NaN     Usa
3833   278535   NaN     Usa
3834   278582   NaN     Usa
3835   278633   NaN     Usa
3836   278843  28.0     Usa

[3837 rows x 3 columns]
(3837, 49)
Matrix Dimensions for  X_train1
X_train1  shape: (184640, 2)
X_train1  unique users: 3837
X_train1  unique items: 75769


X_train1  matrix sparsity: 99.9%


Matrix Dimensions for  X_test1
X_test1  shape: (139441, 2)
X_test1  unique users: 3837
X_test1  unique items: 64256


X_test1  matrix sparsity: 99.9%


Matrix Dimensions for  X_train2
X_train2  shape: (324081, 2)
X_train2  unique users: 3837
X_train2  unique items: 99707


X_train2  matrix sparsity: 99.9%


Matrix Dimensions for  X_test2
X_test2  shape: (141350, 2)
X_test2  unique users: 3837
X_test2  unique items: 64816


X_test2  matrix sparsity: 99.9%


Recommender Round 1: 

training epoch: 0
log likelihood: -120679.65625

training epoch: 1
log likelihood: -110189.8203125

training epoch: 2
log likelihood: -104603.4375

training epoch: 3
log likelihood: -99630.5078125

training epoch: 4
log likelihood: -93673.4375

training epoch: 5
log likelihood: -85828.828125

training epoch: 6
log likelihood: -76795.640625

training epoch: 7
log likelihood: -68184.9765625

training epoch: 8
log likelihood: -60586.859375

training epoch: 9
log likelihood: -54545.30859375

training epoch: 10
log likelihood: -49272.6796875

training epoch: 11
log likelihood: -45087.640625

training epoch: 12
log likelihood: -41475.58984375

training epoch: 13
log likelihood: -38555.609375

training epoch: 14
log likelihood: -36277.25

training epoch: 15
log likelihood: -34200.62890625

training epoch: 16
log likelihood: -32158.859375

training epoch: 17
log likelihood: -30845.5

training epoch: 18
log likelihood: -29585.330078125

training epoch: 19
log likelihood: -28415.7890625
recommendations_train shape:  (3837, 50)
Scores shape:  (139441,)
count    107968.000000
mean          0.990689
std           1.267734
min          -3.082257
25%           0.016654
50%           0.906737
75%           1.954376
max           5.299706
dtype: float64
precision: 0.008
recall: 0.017
hit rate: 0.260
Recommender Round 2: 

training epoch: 0
log likelihood: -203581.265625

training epoch: 1
log likelihood: -181884.375

training epoch: 2
log likelihood: -171170.15625

training epoch: 3
log likelihood: -161268.890625

training epoch: 4
log likelihood: -149084.34375

training epoch: 5
log likelihood: -134232.84375

training epoch: 6
log likelihood: -119727.65625

training epoch: 7
log likelihood: -105895.3828125

training epoch: 8
log likelihood: -95034.0703125

training epoch: 9
log likelihood: -85716.9375

training epoch: 10
log likelihood: -78193.65625

training epoch: 11
log likelihood: -72123.5625

training epoch: 12
log likelihood: -67282.078125

training epoch: 13
log likelihood: -63279.9296875

training epoch: 14
log likelihood: -60016.8515625

training epoch: 15
log likelihood: -57113.390625

training epoch: 16
log likelihood: -54624.578125

training epoch: 17
log likelihood: -52667.98828125

training epoch: 18
log likelihood: -51056.51953125

training epoch: 19
log likelihood: -49574.140625
recommendations_train shape:  (3837, 50)
Scores shape:  (141350,)
count    123403.000000
mean          1.318996
std           1.386974
min          -3.407748
25%           0.239701
50%           1.320128
75%           2.404473
max           5.376285
dtype: float64
precision: 0.010
recall: 0.019
hit rate: 0.292
unique_isbn:  ['0006511929' '0060520507' '0060930934' ... '0385471092' '0449907422'
 '0788192043']
unique_isbn len:  113308
recs:                  0           1           2   ...          47          48          49
243     0671695126  0425172546  014025448X  ...  0312980159  0440222656  0425158616
254     0312195516  0684867974  0553377868  ...  0451166892  0786868716  068484477X
383     0345337662  0804106304  0425133516  ...  0441569595  0345370775  0425185710
487     0142001740  0385504209  043935806X  ...  0671027387  0316781010  068484477X
507     051513239X  0671867091  0449221482  ...  0553258648  0679745203  0440236851
...            ...         ...         ...  ...         ...         ...         ...
278418  087542791X  0552995495  0590568809  ...  0312291639  1853260282  0345368932
278535  0312980159  0515127833  0440211727  ...  0425180638  0515131229  0671014196
278582  0028604199  0971880107  0316284955  ...  0140293248  0060922532  0380762587
278633  0671867156  0451166892  0553271636  ...  0425162788  0385265700  0425154092
278843  0786866276  0440212561  0385335881  ...  0446310786  067101417X  155166531X

[3837 rows x 50 columns]
recs:          0       1       2       3       ...  113304  113305  113306  113307
243        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
254        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
383        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
487        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
507        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
...        ...     ...     ...     ...  ...     ...     ...     ...     ...
278418     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278535     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278582     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278633     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278843     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0

[3837 rows x 113308 columns]
recs shape:  (3837, 113308)
recs:                  0           1           2   ...          47          48          49
243     0425175405  0141000198  0440236673  ...  014029628X  059035342X  0842329218
254     0804108447  0312927746  0553210114  ...  0373872070  0670691992  0060179791
383     080411935X  031298328X  0446611212  ...  0451190572  0671868691  0061031429
487     0440235596  0312983824  0312976275  ...  068484477X  0446605239  0440220602
507     0345402871  0425147363  0590477455  ...  0345369351  0345370775  0590568876
...            ...         ...         ...  ...         ...         ...         ...
278418  0837850681  0440207622  0380715309  ...  0671872664  0807553913  0385501412
278535  0553564528  0446364193  0440224780  ...  0425180638  0440211727  0345311396
278582  0451208765  0140481389  0452280621  ...  0449221873  0671042262  0553279912
278633  0440236673  0842329129  0385484518  ...  006101351X  0446604666  0440213290
278843  0553258001  0449212602  068484267X  ...  059035342X  0449222713  0440224624

[3837 rows x 50 columns]
recs:          0       1       2       3       ...  113304  113305  113306  113307
243        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
254        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
383        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
487        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
507        0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
...        ...     ...     ...     ...  ...     ...     ...     ...     ...
278418     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278535     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278582     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278633     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0
278843     0.0     0.0     0.0     0.0  ...     0.0     0.0     0.0     0.0

[3837 rows x 113308 columns]
recs shape:  (3837, 113308)
Rec train shape:  (3837, 113308)
Rec test shape:  (3837, 113308)
usa_vs_rest
all_attr:  Counter({'Usa': 2496, 'rest': 1341})
all_attr unique:  2
less than 2 samples:  0
2 samples:  0
5 samples or less:  0
train_attr unique:  2
test_attr unique:  2
train_attr:  3837
test_attr:  3837





CV with  dummy  for  usa_vs_rest
train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   3    4    6    7   12   13   17   19   28   37   40   45   50   58
   60   65   72   75   79   83   89   93   94   98   99  102  107  108
  110  123  126  136  137  161  165  169  171  172  181  186  187  188
  194  195  201  203  205  210  219  220  224  230  254  255  256  262
  267  268  280  282  291  292  297  301  305  306  318  321  329  330
  331  349  351  359  364  366  368  372  382  386  393  397  398  399
  403  407  415  416  420  427  435  442  453  457  462  464  471  473
  481  487  494  495  516  517  518  525  534  535  540  541  544  546
  551  555  557  558  560  563  573  574  581  587  588  589  605  610
  630  632  636  650  661  662  664  666  678  685  700  701  702  705
  709  710  719  720  724  725  726  739  748  749  757  758  761  769
  771  772  773  779  781  784  790  791  796  797  799  804  808  812
  813  823  829  834  836  845  846  854  855  857  870  872  874  880
  891  893  899  902  906  909  913  929  931  941  943  945  953  955
  957  958  965  973  975  982  984  986  990  993  996 1004 1010 1012
 1020 1021 1026 1028 1032 1034 1035 1036 1038 1039 1044 1045 1050 1060
 1065 1070 1073 1074 1080 1089 1093 1100 1104 1120 1123 1125 1126 1128
 1131 1135 1140 1143 1144 1145 1156 1159 1162 1163 1164 1169 1176 1177
 1179 1189 1195 1196 1201 1206 1208 1213 1221 1232 1236 1239 1247 1248
 1270 1272 1273 1291 1301 1305 1328 1330 1333 1334 1336 1338 1342 1344
 1347 1349 1359 1373 1375 1386 1395 1400 1404 1406 1408 1419 1432 1433
 1435 1452 1456 1475 1488 1489 1497 1501 1502 1503 1508 1513 1519 1525
 1526 1533 1535 1536 1537 1551 1552 1554 1555 1563 1566 1587 1588 1593
 1595 1596 1597 1610 1621 1624 1626 1636 1641 1644 1648 1651 1653 1658
 1672 1675 1677 1687 1688 1698 1719 1723 1727 1729 1732 1734 1737 1742
 1744 1749 1751 1758 1759 1766 1768 1773 1777 1780 1781 1783 1784 1785
 1792 1802 1805 1808 1814 1825 1828 1829 1832 1836 1837 1847 1851 1852
 1856 1860 1870 1881 1885 1897 1905 1906 1907 1909 1918 1928 1929 1943
 1946 1947 1951 1953 1964 1973 1977 1999 2013 2017 2019 2031 2032 2037
 2039 2048 2051 2053 2059 2070 2078 2088 2095 2096 2099 2104 2106 2111
 2113 2123 2129 2132 2142 2146 2159 2162 2163 2165 2166 2167 2175 2193
 2201 2204 2206 2217 2225 2226 2227 2236 2241 2248 2249 2250 2264 2270
 2273 2279 2289 2293 2296 2297 2298 2301 2313 2316 2317 2320 2328 2340
 2341 2346 2347 2348 2354 2356 2358 2360 2367 2368 2369 2372 2375 2377
 2379 2389 2390 2392 2410 2414 2416 2418 2420 2423 2425 2429 2430 2437
 2438 2451 2458 2459 2462 2463 2466 2472 2481 2482 2496 2512 2538 2545
 2555 2560 2573 2578 2580 2583 2586 2596 2600 2604 2608 2610 2614 2618
 2624 2627 2629 2632 2639 2641 2642 2644 2645 2654 2655 2656 2670 2676
 2679 2687 2689 2695 2698 2699 2707 2710 2715 2723 2727 2728 2734 2740
 2744 2745 2746 2748 2750 2761 2762 2769 2771 2772 2774 2776 2781 2793
 2798 2800 2801 2807 2811 2812 2815 2817 2818 2822 2824 2828 2833 2837
 2838 2841 2849 2850 2852 2860 2861 2862 2863 2873 2879 2882 2883 2889
 2890 2893 2896 2902 2918 2920 2922 2925 2927 2934 2936 2938 2952 2967
 2972 2984 2988 2990 2999 3005 3020 3028 3039 3042 3051 3052 3053 3063
 3065 3080 3088 3103 3111 3122 3123 3130 3135 3137 3138 3140 3141 3143
 3145 3147 3150 3154 3178 3179 3183 3186 3189 3195 3196 3197 3198 3204
 3205 3207 3208 3210 3214 3215 3217 3222 3235 3243 3245 3246 3271 3274
 3279 3290 3296 3301 3304 3312 3316 3321 3326 3327 3335 3338 3346 3350
 3352 3356 3359 3361 3371 3378 3379 3380 3381 3385 3392 3398 3406 3407
 3417 3419 3422 3425 3432 3435 3442 3455 3459 3466 3469 3478 3479 3485
 3486 3488 3500 3502 3512 3518 3522 3532 3535 3539 3540 3542 3547 3549
 3558 3560 3569 3571 3573 3574 3577 3591 3595 3603 3608 3613 3624 3628
 3629 3635 3648 3650 3651 3652 3653 3658 3666 3672 3674 3695 3696 3697
 3707 3708 3719 3720 3726 3733 3734 3739 3741 3743 3785 3786 3787 3788
 3789 3792 3796 3802 3811 3813 3816 3818 3820 3824 3829 3833]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.669, f1=0.669, auc=0.500, est=0.646, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   0    1    2 ... 3832 3833 3835]
train_ix type:  int64
test_ix:  [  10   32   34   35   39   41   44   47   54   56   64   68   81   82
   87   91  103  111  119  120  125  132  133  134  138  146  151  154
  157  166  177  180  191  192  196  199  204  208  216  218  221  223
  227  228  231  233  236  241  248  250  257  260  270  273  275  283
  285  287  289  299  302  303  304  314  335  336  340  341  346  347
  365  367  370  383  390  394  396  414  422  425  428  429  432  434
  436  438  439  440  445  452  459  460  468  470  476  477  480  485
  486  490  492  499  501  508  509  510  521  526  527  533  536  543
  547  549  553  556  559  561  569  571  576  577  579  582  583  584
  586  592  595  598  599  600  602  607  613  616  620  623  627  635
  638  643  644  654  671  674  675  679  681  683  688  693  707  713
  729  730  733  737  747  751  756  764  767  774  777  783  785  788
  792  793  802  816  817  825  839  840  866  876  885  895  896  898
  911  916  918  921  925  926  927  932  933  936  937  946  954  959
  961  968  970  979  981  987  988  994 1000 1002 1006 1008 1009 1011
 1016 1017 1030 1040 1041 1043 1047 1051 1064 1068 1071 1077 1078 1082
 1087 1091 1097 1098 1103 1105 1108 1114 1132 1138 1141 1142 1149 1151
 1153 1167 1171 1173 1178 1194 1197 1215 1216 1217 1218 1219 1220 1223
 1224 1227 1230 1234 1237 1238 1241 1255 1263 1265 1266 1268 1271 1281
 1282 1293 1296 1299 1307 1316 1322 1329 1335 1339 1351 1352 1363 1377
 1379 1380 1385 1387 1391 1396 1398 1399 1402 1403 1409 1410 1412 1413
 1417 1421 1422 1426 1427 1441 1447 1448 1453 1457 1459 1463 1466 1467
 1468 1496 1504 1507 1518 1520 1524 1540 1542 1544 1545 1546 1548 1549
 1550 1556 1559 1562 1564 1573 1578 1579 1586 1592 1603 1607 1608 1613
 1614 1625 1631 1637 1642 1647 1649 1650 1657 1659 1661 1669 1670 1673
 1674 1678 1680 1684 1685 1690 1696 1707 1708 1710 1721 1728 1730 1735
 1736 1747 1748 1754 1760 1765 1767 1772 1776 1778 1782 1787 1789 1791
 1794 1796 1807 1813 1815 1819 1822 1823 1826 1833 1846 1848 1850 1854
 1858 1859 1865 1873 1882 1884 1891 1892 1895 1896 1899 1911 1913 1915
 1916 1919 1922 1924 1926 1930 1941 1944 1945 1950 1956 1957 1958 1959
 1962 1965 1966 1988 1991 1992 2006 2009 2010 2011 2018 2029 2030 2038
 2046 2054 2056 2066 2079 2093 2097 2101 2102 2105 2107 2114 2117 2118
 2119 2121 2126 2130 2135 2139 2150 2156 2158 2169 2173 2181 2182 2190
 2209 2213 2215 2223 2229 2231 2234 2238 2240 2245 2253 2256 2263 2274
 2282 2284 2292 2299 2303 2306 2307 2312 2315 2318 2322 2325 2329 2330
 2336 2338 2343 2351 2359 2361 2373 2378 2384 2399 2409 2415 2421 2426
 2456 2457 2469 2471 2474 2479 2480 2490 2494 2500 2508 2513 2514 2527
 2528 2532 2539 2543 2552 2553 2554 2572 2575 2576 2577 2582 2584 2589
 2597 2601 2603 2605 2606 2611 2619 2625 2630 2635 2637 2646 2650 2657
 2661 2662 2668 2673 2684 2691 2696 2703 2704 2708 2713 2720 2722 2724
 2726 2733 2736 2738 2739 2741 2742 2743 2751 2759 2775 2777 2779 2782
 2784 2785 2803 2816 2825 2827 2830 2842 2855 2856 2858 2870 2872 2874
 2876 2885 2888 2904 2906 2908 2928 2929 2933 2939 2943 2945 2946 2947
 2954 2961 2963 2975 2983 2987 2989 2991 2996 3000 3003 3009 3017 3018
 3019 3026 3031 3044 3048 3055 3056 3058 3059 3064 3066 3067 3068 3070
 3085 3090 3097 3106 3107 3116 3118 3126 3128 3133 3146 3152 3155 3165
 3169 3200 3216 3224 3231 3232 3237 3239 3242 3248 3249 3250 3253 3255
 3262 3264 3266 3267 3278 3286 3288 3292 3297 3299 3313 3323 3329 3334
 3339 3340 3344 3345 3348 3349 3355 3372 3386 3390 3391 3401 3405 3413
 3418 3420 3421 3437 3438 3441 3446 3447 3449 3451 3461 3468 3475 3476
 3482 3497 3501 3503 3513 3514 3520 3521 3524 3529 3531 3537 3546 3553
 3554 3556 3559 3566 3570 3572 3576 3582 3587 3619 3621 3636 3639 3643
 3646 3649 3654 3657 3660 3662 3673 3675 3677 3678 3679 3687 3698 3702
 3710 3712 3723 3728 3731 3732 3744 3747 3749 3750 3754 3758 3775 3778
 3783 3791 3793 3799 3804 3808 3819 3823 3825 3827 3834 3836]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.643, f1=0.643, auc=0.500, est=0.652, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   2    3    4 ... 3833 3834 3836]
train_ix type:  int64
test_ix:  [   0    1    8   11   16   21   23   24   30   38   48   49   51   53
   59   62   67   73   76   80   90  101  104  115  124  128  130  139
  140  148  149  158  160  167  173  176  182  189  190  198  200  202
  206  207  209  212  217  226  229  242  258  259  261  264  281  288
  293  294  309  325  332  338  345  348  350  353  361  363  369  375
  380  385  388  389  400  401  406  418  419  421  424  441  443  444
  446  447  448  456  478  484  488  493  498  503  507  512  513  514
  520  523  529  537  572  575  578  585  590  596  608  612  614  615
  619  625  628  631  634  639  640  642  645  653  655  660  669  670
  672  680  689  692  697  698  703  708  711  712  718  735  736  743
  745  750  760  763  766  768  778  787  800  801  805  807  809  820
  821  828  849  851  852  853  858  859  861  864  877  881  887  894
  900  904  917  919  920  924  934  935  940  948  972  976  977  983
  985  992  995  997 1001 1013 1015 1027 1037 1053 1054 1058 1059 1066
 1069 1081 1083 1084 1094 1102 1109 1112 1115 1117 1118 1122 1124 1129
 1136 1139 1146 1147 1152 1157 1161 1165 1172 1181 1183 1185 1186 1188
 1193 1204 1205 1210 1212 1225 1226 1228 1231 1233 1244 1245 1246 1249
 1252 1260 1262 1264 1269 1276 1283 1285 1286 1287 1289 1290 1292 1294
 1297 1308 1310 1317 1323 1325 1326 1348 1353 1354 1355 1357 1362 1364
 1365 1369 1381 1382 1384 1388 1392 1394 1397 1401 1407 1414 1415 1430
 1436 1438 1442 1443 1446 1450 1454 1461 1462 1470 1471 1477 1480 1481
 1482 1483 1487 1490 1494 1498 1500 1506 1509 1514 1515 1517 1529 1532
 1534 1539 1541 1558 1561 1565 1569 1570 1575 1577 1584 1589 1599 1601
 1604 1605 1606 1609 1611 1617 1623 1628 1629 1645 1646 1652 1654 1660
 1663 1664 1668 1681 1683 1691 1695 1697 1701 1702 1703 1713 1716 1720
 1724 1725 1726 1761 1790 1804 1810 1812 1816 1817 1818 1827 1855 1857
 1862 1863 1864 1866 1872 1875 1893 1894 1900 1902 1903 1908 1917 1921
 1925 1931 1933 1934 1937 1938 1960 1961 1967 1970 1986 1987 1990 1993
 1994 1995 2000 2001 2005 2008 2015 2016 2022 2024 2026 2027 2028 2034
 2035 2040 2043 2045 2049 2062 2064 2065 2068 2073 2074 2084 2085 2087
 2098 2108 2115 2124 2128 2133 2136 2149 2152 2155 2157 2161 2164 2168
 2170 2174 2177 2179 2183 2185 2188 2194 2211 2242 2243 2259 2268 2271
 2275 2276 2281 2290 2294 2295 2300 2308 2314 2323 2331 2333 2334 2344
 2345 2349 2350 2352 2353 2357 2362 2374 2383 2385 2387 2395 2396 2401
 2402 2403 2404 2411 2422 2424 2427 2433 2434 2435 2440 2443 2447 2448
 2453 2455 2461 2470 2473 2476 2483 2491 2495 2497 2510 2511 2517 2519
 2520 2526 2529 2530 2534 2535 2542 2544 2550 2558 2579 2585 2594 2607
 2609 2620 2621 2623 2633 2640 2651 2659 2665 2667 2671 2677 2681 2682
 2686 2688 2692 2694 2697 2700 2701 2702 2709 2711 2712 2717 2719 2721
 2725 2731 2732 2753 2755 2756 2764 2766 2768 2778 2786 2796 2802 2809
 2813 2820 2826 2834 2839 2866 2868 2869 2871 2881 2886 2891 2907 2913
 2916 2921 2930 2931 2935 2940 2942 2948 2950 2957 2960 2966 2969 2971
 2974 2977 2978 2995 2997 3007 3008 3014 3024 3025 3030 3034 3035 3037
 3041 3043 3054 3057 3061 3062 3071 3077 3083 3091 3093 3101 3108 3112
 3113 3114 3119 3120 3121 3124 3129 3131 3132 3142 3144 3151 3153 3161
 3162 3163 3166 3167 3172 3175 3181 3182 3185 3190 3191 3193 3201 3213
 3219 3223 3225 3226 3228 3229 3233 3240 3252 3256 3259 3261 3268 3269
 3273 3275 3276 3293 3294 3306 3309 3310 3315 3317 3319 3320 3324 3331
 3337 3341 3357 3365 3369 3370 3373 3375 3382 3388 3393 3395 3399 3400
 3403 3411 3415 3423 3424 3431 3433 3443 3444 3456 3464 3467 3471 3474
 3481 3484 3491 3495 3507 3508 3509 3510 3517 3519 3523 3533 3543 3544
 3551 3552 3555 3561 3565 3567 3568 3579 3585 3598 3604 3612 3617 3620
 3622 3626 3627 3637 3663 3664 3667 3668 3680 3681 3683 3686 3689 3690
 3692 3701 3704 3713 3716 3718 3740 3746 3748 3751 3759 3762 3763 3767
 3768 3773 3776 3777 3781 3809 3814 3815 3821 3832 3835]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.651, f1=0.651, auc=0.500, est=0.650, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   0    1    3 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   2    5    9   22   26   27   29   31   33   43   46   55   57   61
   66   69   74   78   84   85   88   97  106  113  117  121  127  131
  135  141  142  147  156  159  163  164  170  175  178  185  193  211
  215  234  237  238  239  244  245  251  265  274  276  277  278  279
  284  286  295  298  300  307  308  310  311  315  320  322  323  326
  328  339  352  354  355  358  360  371  374  381  384  387  392  395
  404  408  409  426  430  433  437  449  455  458  463  466  472  474
  479  482  483  491  496  500  502  504  511  528  530  531  538  548
  550  554  567  568  570  593  594  597  603  604  618  622  629  641
  646  647  649  659  663  673  682  686  694  699  722  723  731  740
  741  742  744  746  752  754  755  759  765  776  780  782  786  789
  798  810  815  819  824  826  827  830  831  833  841  842  847  860
  862  863  867  868  875  888  890  892  912  914  922  923  930  938
  942  950  951  952  962  966  969  974  978  991 1003 1005 1007 1014
 1023 1024 1029 1048 1055 1056 1057 1079 1085 1086 1090 1092 1101 1116
 1119 1127 1130 1134 1148 1158 1166 1180 1184 1190 1198 1199 1203 1209
 1211 1222 1229 1240 1242 1243 1250 1256 1257 1259 1267 1274 1279 1280
 1298 1302 1304 1314 1315 1318 1319 1320 1331 1340 1341 1343 1346 1356
 1358 1361 1367 1370 1371 1374 1378 1390 1405 1416 1418 1428 1429 1437
 1440 1444 1451 1458 1464 1476 1479 1505 1510 1511 1512 1516 1531 1543
 1553 1557 1567 1568 1574 1576 1583 1585 1591 1600 1602 1618 1633 1634
 1643 1655 1656 1662 1665 1671 1676 1682 1699 1704 1705 1709 1711 1714
 1718 1731 1733 1739 1743 1746 1750 1753 1755 1764 1769 1770 1775 1779
 1786 1788 1793 1797 1800 1809 1811 1821 1831 1839 1841 1842 1843 1853
 1861 1867 1868 1877 1886 1889 1901 1904 1910 1912 1923 1932 1935 1940
 1948 1952 1954 1955 1963 1969 1971 1972 1974 1975 1976 1978 1980 1984
 1985 1989 1997 1998 2002 2003 2004 2007 2014 2020 2021 2023 2036 2041
 2042 2044 2047 2050 2057 2058 2060 2061 2063 2067 2071 2075 2076 2080
 2081 2082 2083 2086 2089 2090 2094 2100 2109 2110 2112 2116 2120 2122
 2131 2134 2137 2138 2140 2143 2145 2147 2151 2153 2154 2160 2184 2187
 2191 2192 2196 2198 2199 2200 2202 2203 2207 2208 2212 2220 2228 2232
 2233 2235 2237 2239 2246 2252 2255 2262 2266 2272 2280 2285 2286 2287
 2291 2304 2305 2310 2319 2324 2332 2337 2339 2342 2355 2363 2364 2366
 2370 2371 2380 2381 2388 2391 2393 2397 2398 2406 2407 2412 2428 2431
 2436 2439 2441 2444 2449 2452 2454 2460 2467 2475 2478 2484 2485 2487
 2489 2493 2501 2503 2505 2507 2509 2515 2521 2522 2531 2540 2541 2546
 2551 2557 2563 2564 2567 2568 2569 2570 2571 2591 2593 2595 2598 2602
 2612 2613 2615 2616 2622 2626 2647 2649 2652 2660 2664 2672 2680 2683
 2685 2706 2718 2730 2735 2747 2749 2752 2757 2758 2765 2767 2773 2783
 2789 2790 2792 2794 2805 2810 2814 2819 2821 2823 2845 2846 2847 2848
 2851 2854 2857 2859 2864 2865 2867 2875 2878 2887 2894 2898 2899 2900
 2901 2903 2905 2909 2911 2912 2914 2915 2917 2924 2926 2932 2941 2951
 2956 2964 2968 2970 2973 2979 2985 2986 2992 2993 2998 3001 3004 3010
 3016 3027 3032 3033 3038 3040 3045 3060 3072 3073 3074 3075 3076 3078
 3079 3081 3084 3086 3089 3092 3095 3096 3105 3117 3127 3134 3148 3156
 3158 3160 3164 3171 3173 3176 3177 3180 3188 3192 3194 3202 3203 3211
 3218 3220 3221 3227 3247 3251 3254 3263 3272 3277 3282 3285 3289 3295
 3298 3300 3307 3308 3311 3322 3332 3333 3336 3343 3354 3358 3362 3363
 3366 3377 3384 3389 3408 3409 3412 3414 3427 3429 3434 3440 3445 3448
 3454 3457 3458 3460 3463 3470 3472 3473 3477 3480 3483 3487 3492 3493
 3494 3498 3504 3506 3511 3516 3525 3527 3530 3534 3536 3557 3563 3575
 3581 3584 3586 3589 3590 3592 3593 3594 3596 3599 3601 3602 3607 3611
 3616 3618 3623 3625 3632 3634 3641 3647 3656 3665 3670 3671 3676 3691
 3699 3700 3705 3709 3714 3715 3721 3722 3724 3727 3745 3755 3756 3760
 3764 3765 3769 3780 3784 3790 3795 3798 3806 3826 3830]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.647, f1=0.647, auc=0.500, est=0.651, cfg={'dummy__strategy': 'most_frequent'} 

train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  114  116  118  122  129  143  144  145
  150  152  153  155  162  168  174  179  183  184  197  213  214  222
  225  232  235  240  243  246  247  249  252  253  263  266  269  271
  272  290  296  312  313  316  317  319  324  327  333  334  337  342
  343  344  356  357  362  373  376  377  378  379  391  402  405  410
  411  412  413  417  423  431  450  451  454  461  465  467  469  475
  489  497  505  506  515  519  522  524  532  539  542  545  552  562
  564  565  566  580  591  601  606  609  611  617  621  624  626  633
  637  648  651  652  656  657  658  665  667  668  676  677  684  687
  690  691  695  696  704  706  714  715  716  717  721  727  728  732
  734  738  753  762  770  775  794  795  803  806  811  814  818  822
  832  835  837  838  843  844  848  850  856  865  869  871  873  878
  879  882  883  884  886  889  897  901  903  905  907  908  910  915
  928  939  944  947  949  956  960  963  964  967  971  980  989  998
  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1061 1062 1063
 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110 1111 1113 1121
 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182 1187 1191 1192
 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275 1277 1278 1284
 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324 1327 1332 1337
 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411 1420 1423 1424
 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472 1473 1474 1478
 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523 1527 1528 1530
 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598 1612 1615 1616
 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666 1667 1679 1686
 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738 1740 1741 1745
 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799 1801 1803 1806 1820
 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869 1871 1874 1876 1878
 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927 1936 1939 1942 1949
 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052 2055 2069 2072 2077
 2091 2092 2103 2125 2127 2141 2144 2148 2171 2172 2176 2178 2180 2186
 2189 2195 2197 2205 2210 2214 2216 2218 2219 2221 2222 2224 2230 2244
 2247 2251 2254 2257 2258 2260 2261 2265 2267 2269 2277 2278 2283 2288
 2302 2309 2311 2321 2326 2327 2335 2365 2376 2382 2386 2394 2400 2405
 2408 2413 2417 2419 2432 2442 2445 2446 2450 2464 2465 2468 2477 2486
 2488 2492 2498 2499 2502 2504 2506 2516 2518 2523 2524 2525 2533 2536
 2537 2547 2548 2549 2556 2559 2561 2562 2565 2566 2574 2581 2587 2588
 2590 2592 2599 2617 2628 2631 2634 2636 2638 2643 2648 2653 2658 2663
 2666 2669 2674 2675 2678 2690 2693 2705 2714 2716 2729 2737 2754 2760
 2763 2770 2780 2787 2788 2791 2795 2797 2799 2804 2806 2808 2829 2831
 2832 2835 2836 2840 2843 2844 2853 2877 2880 2884 2892 2895 2897 2910
 2919 2923 2937 2944 2949 2953 2955 2958 2959 2962 2965 2976 2980 2981
 2982 2994 3002 3006 3011 3012 3013 3015 3021 3022 3023 3029 3036 3046
 3047 3049 3050 3069 3082 3087 3094 3098 3099 3100 3102 3104 3109 3110
 3115 3125 3136 3139 3149 3157 3159 3168 3170 3174 3184 3187 3199 3206
 3209 3212 3230 3234 3236 3238 3241 3244 3257 3258 3260 3265 3270 3280
 3281 3283 3284 3287 3291 3302 3303 3305 3314 3318 3325 3328 3330 3342
 3347 3351 3353 3360 3364 3367 3368 3374 3376 3383 3387 3394 3396 3397
 3402 3404 3410 3416 3426 3428 3430 3436 3439 3450 3452 3453 3462 3465
 3489 3490 3496 3499 3505 3515 3526 3528 3538 3541 3545 3548 3550 3562
 3564 3578 3580 3583 3588 3597 3600 3605 3606 3609 3610 3614 3615 3630
 3631 3633 3638 3640 3642 3644 3645 3655 3659 3661 3669 3682 3684 3685
 3688 3693 3694 3703 3706 3711 3717 3725 3729 3730 3735 3736 3737 3738
 3742 3752 3753 3757 3761 3766 3770 3771 3772 3774 3779 3782 3794 3797
 3800 3801 3803 3805 3807 3810 3812 3817 3822 3828 3831]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.643, f1=0.643, auc=0.500, est=0.652, cfg={'dummy__strategy': 'most_frequent'} 

Accuracy: 0.651 (0.010) 

F1: 0.651 (0.010) 

AUC: 0.500 (0.000) 



CV with  log_reg  for  usa_vs_rest
train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   3    4    6    7   12   13   17   19   28   37   40   45   50   58
   60   65   72   75   79   83   89   93   94   98   99  102  107  108
  110  123  126  136  137  161  165  169  171  172  181  186  187  188
  194  195  201  203  205  210  219  220  224  230  254  255  256  262
  267  268  280  282  291  292  297  301  305  306  318  321  329  330
  331  349  351  359  364  366  368  372  382  386  393  397  398  399
  403  407  415  416  420  427  435  442  453  457  462  464  471  473
  481  487  494  495  516  517  518  525  534  535  540  541  544  546
  551  555  557  558  560  563  573  574  581  587  588  589  605  610
  630  632  636  650  661  662  664  666  678  685  700  701  702  705
  709  710  719  720  724  725  726  739  748  749  757  758  761  769
  771  772  773  779  781  784  790  791  796  797  799  804  808  812
  813  823  829  834  836  845  846  854  855  857  870  872  874  880
  891  893  899  902  906  909  913  929  931  941  943  945  953  955
  957  958  965  973  975  982  984  986  990  993  996 1004 1010 1012
 1020 1021 1026 1028 1032 1034 1035 1036 1038 1039 1044 1045 1050 1060
 1065 1070 1073 1074 1080 1089 1093 1100 1104 1120 1123 1125 1126 1128
 1131 1135 1140 1143 1144 1145 1156 1159 1162 1163 1164 1169 1176 1177
 1179 1189 1195 1196 1201 1206 1208 1213 1221 1232 1236 1239 1247 1248
 1270 1272 1273 1291 1301 1305 1328 1330 1333 1334 1336 1338 1342 1344
 1347 1349 1359 1373 1375 1386 1395 1400 1404 1406 1408 1419 1432 1433
 1435 1452 1456 1475 1488 1489 1497 1501 1502 1503 1508 1513 1519 1525
 1526 1533 1535 1536 1537 1551 1552 1554 1555 1563 1566 1587 1588 1593
 1595 1596 1597 1610 1621 1624 1626 1636 1641 1644 1648 1651 1653 1658
 1672 1675 1677 1687 1688 1698 1719 1723 1727 1729 1732 1734 1737 1742
 1744 1749 1751 1758 1759 1766 1768 1773 1777 1780 1781 1783 1784 1785
 1792 1802 1805 1808 1814 1825 1828 1829 1832 1836 1837 1847 1851 1852
 1856 1860 1870 1881 1885 1897 1905 1906 1907 1909 1918 1928 1929 1943
 1946 1947 1951 1953 1964 1973 1977 1999 2013 2017 2019 2031 2032 2037
 2039 2048 2051 2053 2059 2070 2078 2088 2095 2096 2099 2104 2106 2111
 2113 2123 2129 2132 2142 2146 2159 2162 2163 2165 2166 2167 2175 2193
 2201 2204 2206 2217 2225 2226 2227 2236 2241 2248 2249 2250 2264 2270
 2273 2279 2289 2293 2296 2297 2298 2301 2313 2316 2317 2320 2328 2340
 2341 2346 2347 2348 2354 2356 2358 2360 2367 2368 2369 2372 2375 2377
 2379 2389 2390 2392 2410 2414 2416 2418 2420 2423 2425 2429 2430 2437
 2438 2451 2458 2459 2462 2463 2466 2472 2481 2482 2496 2512 2538 2545
 2555 2560 2573 2578 2580 2583 2586 2596 2600 2604 2608 2610 2614 2618
 2624 2627 2629 2632 2639 2641 2642 2644 2645 2654 2655 2656 2670 2676
 2679 2687 2689 2695 2698 2699 2707 2710 2715 2723 2727 2728 2734 2740
 2744 2745 2746 2748 2750 2761 2762 2769 2771 2772 2774 2776 2781 2793
 2798 2800 2801 2807 2811 2812 2815 2817 2818 2822 2824 2828 2833 2837
 2838 2841 2849 2850 2852 2860 2861 2862 2863 2873 2879 2882 2883 2889
 2890 2893 2896 2902 2918 2920 2922 2925 2927 2934 2936 2938 2952 2967
 2972 2984 2988 2990 2999 3005 3020 3028 3039 3042 3051 3052 3053 3063
 3065 3080 3088 3103 3111 3122 3123 3130 3135 3137 3138 3140 3141 3143
 3145 3147 3150 3154 3178 3179 3183 3186 3189 3195 3196 3197 3198 3204
 3205 3207 3208 3210 3214 3215 3217 3222 3235 3243 3245 3246 3271 3274
 3279 3290 3296 3301 3304 3312 3316 3321 3326 3327 3335 3338 3346 3350
 3352 3356 3359 3361 3371 3378 3379 3380 3381 3385 3392 3398 3406 3407
 3417 3419 3422 3425 3432 3435 3442 3455 3459 3466 3469 3478 3479 3485
 3486 3488 3500 3502 3512 3518 3522 3532 3535 3539 3540 3542 3547 3549
 3558 3560 3569 3571 3573 3574 3577 3591 3595 3603 3608 3613 3624 3628
 3629 3635 3648 3650 3651 3652 3653 3658 3666 3672 3674 3695 3696 3697
 3707 3708 3719 3720 3726 3733 3734 3739 3741 3743 3785 3786 3787 3788
 3789 3792 3796 3802 3811 3813 3816 3818 3820 3824 3829 3833]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.797, f1=0.797, auc=0.814, est=0.796, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   0    1    2 ... 3832 3833 3835]
train_ix type:  int64
test_ix:  [  10   32   34   35   39   41   44   47   54   56   64   68   81   82
   87   91  103  111  119  120  125  132  133  134  138  146  151  154
  157  166  177  180  191  192  196  199  204  208  216  218  221  223
  227  228  231  233  236  241  248  250  257  260  270  273  275  283
  285  287  289  299  302  303  304  314  335  336  340  341  346  347
  365  367  370  383  390  394  396  414  422  425  428  429  432  434
  436  438  439  440  445  452  459  460  468  470  476  477  480  485
  486  490  492  499  501  508  509  510  521  526  527  533  536  543
  547  549  553  556  559  561  569  571  576  577  579  582  583  584
  586  592  595  598  599  600  602  607  613  616  620  623  627  635
  638  643  644  654  671  674  675  679  681  683  688  693  707  713
  729  730  733  737  747  751  756  764  767  774  777  783  785  788
  792  793  802  816  817  825  839  840  866  876  885  895  896  898
  911  916  918  921  925  926  927  932  933  936  937  946  954  959
  961  968  970  979  981  987  988  994 1000 1002 1006 1008 1009 1011
 1016 1017 1030 1040 1041 1043 1047 1051 1064 1068 1071 1077 1078 1082
 1087 1091 1097 1098 1103 1105 1108 1114 1132 1138 1141 1142 1149 1151
 1153 1167 1171 1173 1178 1194 1197 1215 1216 1217 1218 1219 1220 1223
 1224 1227 1230 1234 1237 1238 1241 1255 1263 1265 1266 1268 1271 1281
 1282 1293 1296 1299 1307 1316 1322 1329 1335 1339 1351 1352 1363 1377
 1379 1380 1385 1387 1391 1396 1398 1399 1402 1403 1409 1410 1412 1413
 1417 1421 1422 1426 1427 1441 1447 1448 1453 1457 1459 1463 1466 1467
 1468 1496 1504 1507 1518 1520 1524 1540 1542 1544 1545 1546 1548 1549
 1550 1556 1559 1562 1564 1573 1578 1579 1586 1592 1603 1607 1608 1613
 1614 1625 1631 1637 1642 1647 1649 1650 1657 1659 1661 1669 1670 1673
 1674 1678 1680 1684 1685 1690 1696 1707 1708 1710 1721 1728 1730 1735
 1736 1747 1748 1754 1760 1765 1767 1772 1776 1778 1782 1787 1789 1791
 1794 1796 1807 1813 1815 1819 1822 1823 1826 1833 1846 1848 1850 1854
 1858 1859 1865 1873 1882 1884 1891 1892 1895 1896 1899 1911 1913 1915
 1916 1919 1922 1924 1926 1930 1941 1944 1945 1950 1956 1957 1958 1959
 1962 1965 1966 1988 1991 1992 2006 2009 2010 2011 2018 2029 2030 2038
 2046 2054 2056 2066 2079 2093 2097 2101 2102 2105 2107 2114 2117 2118
 2119 2121 2126 2130 2135 2139 2150 2156 2158 2169 2173 2181 2182 2190
 2209 2213 2215 2223 2229 2231 2234 2238 2240 2245 2253 2256 2263 2274
 2282 2284 2292 2299 2303 2306 2307 2312 2315 2318 2322 2325 2329 2330
 2336 2338 2343 2351 2359 2361 2373 2378 2384 2399 2409 2415 2421 2426
 2456 2457 2469 2471 2474 2479 2480 2490 2494 2500 2508 2513 2514 2527
 2528 2532 2539 2543 2552 2553 2554 2572 2575 2576 2577 2582 2584 2589
 2597 2601 2603 2605 2606 2611 2619 2625 2630 2635 2637 2646 2650 2657
 2661 2662 2668 2673 2684 2691 2696 2703 2704 2708 2713 2720 2722 2724
 2726 2733 2736 2738 2739 2741 2742 2743 2751 2759 2775 2777 2779 2782
 2784 2785 2803 2816 2825 2827 2830 2842 2855 2856 2858 2870 2872 2874
 2876 2885 2888 2904 2906 2908 2928 2929 2933 2939 2943 2945 2946 2947
 2954 2961 2963 2975 2983 2987 2989 2991 2996 3000 3003 3009 3017 3018
 3019 3026 3031 3044 3048 3055 3056 3058 3059 3064 3066 3067 3068 3070
 3085 3090 3097 3106 3107 3116 3118 3126 3128 3133 3146 3152 3155 3165
 3169 3200 3216 3224 3231 3232 3237 3239 3242 3248 3249 3250 3253 3255
 3262 3264 3266 3267 3278 3286 3288 3292 3297 3299 3313 3323 3329 3334
 3339 3340 3344 3345 3348 3349 3355 3372 3386 3390 3391 3401 3405 3413
 3418 3420 3421 3437 3438 3441 3446 3447 3449 3451 3461 3468 3475 3476
 3482 3497 3501 3503 3513 3514 3520 3521 3524 3529 3531 3537 3546 3553
 3554 3556 3559 3566 3570 3572 3576 3582 3587 3619 3621 3636 3639 3643
 3646 3649 3654 3657 3660 3662 3673 3675 3677 3678 3679 3687 3698 3702
 3710 3712 3723 3728 3731 3732 3744 3747 3749 3750 3754 3758 3775 3778
 3783 3791 3793 3799 3804 3808 3819 3823 3825 3827 3834 3836]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.790, f1=0.790, auc=0.792, est=0.805, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   2    3    4 ... 3833 3834 3836]
train_ix type:  int64
test_ix:  [   0    1    8   11   16   21   23   24   30   38   48   49   51   53
   59   62   67   73   76   80   90  101  104  115  124  128  130  139
  140  148  149  158  160  167  173  176  182  189  190  198  200  202
  206  207  209  212  217  226  229  242  258  259  261  264  281  288
  293  294  309  325  332  338  345  348  350  353  361  363  369  375
  380  385  388  389  400  401  406  418  419  421  424  441  443  444
  446  447  448  456  478  484  488  493  498  503  507  512  513  514
  520  523  529  537  572  575  578  585  590  596  608  612  614  615
  619  625  628  631  634  639  640  642  645  653  655  660  669  670
  672  680  689  692  697  698  703  708  711  712  718  735  736  743
  745  750  760  763  766  768  778  787  800  801  805  807  809  820
  821  828  849  851  852  853  858  859  861  864  877  881  887  894
  900  904  917  919  920  924  934  935  940  948  972  976  977  983
  985  992  995  997 1001 1013 1015 1027 1037 1053 1054 1058 1059 1066
 1069 1081 1083 1084 1094 1102 1109 1112 1115 1117 1118 1122 1124 1129
 1136 1139 1146 1147 1152 1157 1161 1165 1172 1181 1183 1185 1186 1188
 1193 1204 1205 1210 1212 1225 1226 1228 1231 1233 1244 1245 1246 1249
 1252 1260 1262 1264 1269 1276 1283 1285 1286 1287 1289 1290 1292 1294
 1297 1308 1310 1317 1323 1325 1326 1348 1353 1354 1355 1357 1362 1364
 1365 1369 1381 1382 1384 1388 1392 1394 1397 1401 1407 1414 1415 1430
 1436 1438 1442 1443 1446 1450 1454 1461 1462 1470 1471 1477 1480 1481
 1482 1483 1487 1490 1494 1498 1500 1506 1509 1514 1515 1517 1529 1532
 1534 1539 1541 1558 1561 1565 1569 1570 1575 1577 1584 1589 1599 1601
 1604 1605 1606 1609 1611 1617 1623 1628 1629 1645 1646 1652 1654 1660
 1663 1664 1668 1681 1683 1691 1695 1697 1701 1702 1703 1713 1716 1720
 1724 1725 1726 1761 1790 1804 1810 1812 1816 1817 1818 1827 1855 1857
 1862 1863 1864 1866 1872 1875 1893 1894 1900 1902 1903 1908 1917 1921
 1925 1931 1933 1934 1937 1938 1960 1961 1967 1970 1986 1987 1990 1993
 1994 1995 2000 2001 2005 2008 2015 2016 2022 2024 2026 2027 2028 2034
 2035 2040 2043 2045 2049 2062 2064 2065 2068 2073 2074 2084 2085 2087
 2098 2108 2115 2124 2128 2133 2136 2149 2152 2155 2157 2161 2164 2168
 2170 2174 2177 2179 2183 2185 2188 2194 2211 2242 2243 2259 2268 2271
 2275 2276 2281 2290 2294 2295 2300 2308 2314 2323 2331 2333 2334 2344
 2345 2349 2350 2352 2353 2357 2362 2374 2383 2385 2387 2395 2396 2401
 2402 2403 2404 2411 2422 2424 2427 2433 2434 2435 2440 2443 2447 2448
 2453 2455 2461 2470 2473 2476 2483 2491 2495 2497 2510 2511 2517 2519
 2520 2526 2529 2530 2534 2535 2542 2544 2550 2558 2579 2585 2594 2607
 2609 2620 2621 2623 2633 2640 2651 2659 2665 2667 2671 2677 2681 2682
 2686 2688 2692 2694 2697 2700 2701 2702 2709 2711 2712 2717 2719 2721
 2725 2731 2732 2753 2755 2756 2764 2766 2768 2778 2786 2796 2802 2809
 2813 2820 2826 2834 2839 2866 2868 2869 2871 2881 2886 2891 2907 2913
 2916 2921 2930 2931 2935 2940 2942 2948 2950 2957 2960 2966 2969 2971
 2974 2977 2978 2995 2997 3007 3008 3014 3024 3025 3030 3034 3035 3037
 3041 3043 3054 3057 3061 3062 3071 3077 3083 3091 3093 3101 3108 3112
 3113 3114 3119 3120 3121 3124 3129 3131 3132 3142 3144 3151 3153 3161
 3162 3163 3166 3167 3172 3175 3181 3182 3185 3190 3191 3193 3201 3213
 3219 3223 3225 3226 3228 3229 3233 3240 3252 3256 3259 3261 3268 3269
 3273 3275 3276 3293 3294 3306 3309 3310 3315 3317 3319 3320 3324 3331
 3337 3341 3357 3365 3369 3370 3373 3375 3382 3388 3393 3395 3399 3400
 3403 3411 3415 3423 3424 3431 3433 3443 3444 3456 3464 3467 3471 3474
 3481 3484 3491 3495 3507 3508 3509 3510 3517 3519 3523 3533 3543 3544
 3551 3552 3555 3561 3565 3567 3568 3579 3585 3598 3604 3612 3617 3620
 3622 3626 3627 3637 3663 3664 3667 3668 3680 3681 3683 3686 3689 3690
 3692 3701 3704 3713 3716 3718 3740 3746 3748 3751 3759 3762 3763 3767
 3768 3773 3776 3777 3781 3809 3814 3815 3821 3832 3835]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.778, f1=0.778, auc=0.814, est=0.794, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   0    1    3 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   2    5    9   22   26   27   29   31   33   43   46   55   57   61
   66   69   74   78   84   85   88   97  106  113  117  121  127  131
  135  141  142  147  156  159  163  164  170  175  178  185  193  211
  215  234  237  238  239  244  245  251  265  274  276  277  278  279
  284  286  295  298  300  307  308  310  311  315  320  322  323  326
  328  339  352  354  355  358  360  371  374  381  384  387  392  395
  404  408  409  426  430  433  437  449  455  458  463  466  472  474
  479  482  483  491  496  500  502  504  511  528  530  531  538  548
  550  554  567  568  570  593  594  597  603  604  618  622  629  641
  646  647  649  659  663  673  682  686  694  699  722  723  731  740
  741  742  744  746  752  754  755  759  765  776  780  782  786  789
  798  810  815  819  824  826  827  830  831  833  841  842  847  860
  862  863  867  868  875  888  890  892  912  914  922  923  930  938
  942  950  951  952  962  966  969  974  978  991 1003 1005 1007 1014
 1023 1024 1029 1048 1055 1056 1057 1079 1085 1086 1090 1092 1101 1116
 1119 1127 1130 1134 1148 1158 1166 1180 1184 1190 1198 1199 1203 1209
 1211 1222 1229 1240 1242 1243 1250 1256 1257 1259 1267 1274 1279 1280
 1298 1302 1304 1314 1315 1318 1319 1320 1331 1340 1341 1343 1346 1356
 1358 1361 1367 1370 1371 1374 1378 1390 1405 1416 1418 1428 1429 1437
 1440 1444 1451 1458 1464 1476 1479 1505 1510 1511 1512 1516 1531 1543
 1553 1557 1567 1568 1574 1576 1583 1585 1591 1600 1602 1618 1633 1634
 1643 1655 1656 1662 1665 1671 1676 1682 1699 1704 1705 1709 1711 1714
 1718 1731 1733 1739 1743 1746 1750 1753 1755 1764 1769 1770 1775 1779
 1786 1788 1793 1797 1800 1809 1811 1821 1831 1839 1841 1842 1843 1853
 1861 1867 1868 1877 1886 1889 1901 1904 1910 1912 1923 1932 1935 1940
 1948 1952 1954 1955 1963 1969 1971 1972 1974 1975 1976 1978 1980 1984
 1985 1989 1997 1998 2002 2003 2004 2007 2014 2020 2021 2023 2036 2041
 2042 2044 2047 2050 2057 2058 2060 2061 2063 2067 2071 2075 2076 2080
 2081 2082 2083 2086 2089 2090 2094 2100 2109 2110 2112 2116 2120 2122
 2131 2134 2137 2138 2140 2143 2145 2147 2151 2153 2154 2160 2184 2187
 2191 2192 2196 2198 2199 2200 2202 2203 2207 2208 2212 2220 2228 2232
 2233 2235 2237 2239 2246 2252 2255 2262 2266 2272 2280 2285 2286 2287
 2291 2304 2305 2310 2319 2324 2332 2337 2339 2342 2355 2363 2364 2366
 2370 2371 2380 2381 2388 2391 2393 2397 2398 2406 2407 2412 2428 2431
 2436 2439 2441 2444 2449 2452 2454 2460 2467 2475 2478 2484 2485 2487
 2489 2493 2501 2503 2505 2507 2509 2515 2521 2522 2531 2540 2541 2546
 2551 2557 2563 2564 2567 2568 2569 2570 2571 2591 2593 2595 2598 2602
 2612 2613 2615 2616 2622 2626 2647 2649 2652 2660 2664 2672 2680 2683
 2685 2706 2718 2730 2735 2747 2749 2752 2757 2758 2765 2767 2773 2783
 2789 2790 2792 2794 2805 2810 2814 2819 2821 2823 2845 2846 2847 2848
 2851 2854 2857 2859 2864 2865 2867 2875 2878 2887 2894 2898 2899 2900
 2901 2903 2905 2909 2911 2912 2914 2915 2917 2924 2926 2932 2941 2951
 2956 2964 2968 2970 2973 2979 2985 2986 2992 2993 2998 3001 3004 3010
 3016 3027 3032 3033 3038 3040 3045 3060 3072 3073 3074 3075 3076 3078
 3079 3081 3084 3086 3089 3092 3095 3096 3105 3117 3127 3134 3148 3156
 3158 3160 3164 3171 3173 3176 3177 3180 3188 3192 3194 3202 3203 3211
 3218 3220 3221 3227 3247 3251 3254 3263 3272 3277 3282 3285 3289 3295
 3298 3300 3307 3308 3311 3322 3332 3333 3336 3343 3354 3358 3362 3363
 3366 3377 3384 3389 3408 3409 3412 3414 3427 3429 3434 3440 3445 3448
 3454 3457 3458 3460 3463 3470 3472 3473 3477 3480 3483 3487 3492 3493
 3494 3498 3504 3506 3511 3516 3525 3527 3530 3534 3536 3557 3563 3575
 3581 3584 3586 3589 3590 3592 3593 3594 3596 3599 3601 3602 3607 3611
 3616 3618 3623 3625 3632 3634 3641 3647 3656 3665 3670 3671 3676 3691
 3699 3700 3705 3709 3714 3715 3721 3722 3724 3727 3745 3755 3756 3760
 3764 3765 3769 3780 3784 3790 3795 3798 3806 3826 3830]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.786, f1=0.786, auc=0.800, est=0.791, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  114  116  118  122  129  143  144  145
  150  152  153  155  162  168  174  179  183  184  197  213  214  222
  225  232  235  240  243  246  247  249  252  253  263  266  269  271
  272  290  296  312  313  316  317  319  324  327  333  334  337  342
  343  344  356  357  362  373  376  377  378  379  391  402  405  410
  411  412  413  417  423  431  450  451  454  461  465  467  469  475
  489  497  505  506  515  519  522  524  532  539  542  545  552  562
  564  565  566  580  591  601  606  609  611  617  621  624  626  633
  637  648  651  652  656  657  658  665  667  668  676  677  684  687
  690  691  695  696  704  706  714  715  716  717  721  727  728  732
  734  738  753  762  770  775  794  795  803  806  811  814  818  822
  832  835  837  838  843  844  848  850  856  865  869  871  873  878
  879  882  883  884  886  889  897  901  903  905  907  908  910  915
  928  939  944  947  949  956  960  963  964  967  971  980  989  998
  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1061 1062 1063
 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110 1111 1113 1121
 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182 1187 1191 1192
 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275 1277 1278 1284
 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324 1327 1332 1337
 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411 1420 1423 1424
 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472 1473 1474 1478
 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523 1527 1528 1530
 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598 1612 1615 1616
 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666 1667 1679 1686
 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738 1740 1741 1745
 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799 1801 1803 1806 1820
 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869 1871 1874 1876 1878
 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927 1936 1939 1942 1949
 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052 2055 2069 2072 2077
 2091 2092 2103 2125 2127 2141 2144 2148 2171 2172 2176 2178 2180 2186
 2189 2195 2197 2205 2210 2214 2216 2218 2219 2221 2222 2224 2230 2244
 2247 2251 2254 2257 2258 2260 2261 2265 2267 2269 2277 2278 2283 2288
 2302 2309 2311 2321 2326 2327 2335 2365 2376 2382 2386 2394 2400 2405
 2408 2413 2417 2419 2432 2442 2445 2446 2450 2464 2465 2468 2477 2486
 2488 2492 2498 2499 2502 2504 2506 2516 2518 2523 2524 2525 2533 2536
 2537 2547 2548 2549 2556 2559 2561 2562 2565 2566 2574 2581 2587 2588
 2590 2592 2599 2617 2628 2631 2634 2636 2638 2643 2648 2653 2658 2663
 2666 2669 2674 2675 2678 2690 2693 2705 2714 2716 2729 2737 2754 2760
 2763 2770 2780 2787 2788 2791 2795 2797 2799 2804 2806 2808 2829 2831
 2832 2835 2836 2840 2843 2844 2853 2877 2880 2884 2892 2895 2897 2910
 2919 2923 2937 2944 2949 2953 2955 2958 2959 2962 2965 2976 2980 2981
 2982 2994 3002 3006 3011 3012 3013 3015 3021 3022 3023 3029 3036 3046
 3047 3049 3050 3069 3082 3087 3094 3098 3099 3100 3102 3104 3109 3110
 3115 3125 3136 3139 3149 3157 3159 3168 3170 3174 3184 3187 3199 3206
 3209 3212 3230 3234 3236 3238 3241 3244 3257 3258 3260 3265 3270 3280
 3281 3283 3284 3287 3291 3302 3303 3305 3314 3318 3325 3328 3330 3342
 3347 3351 3353 3360 3364 3367 3368 3374 3376 3383 3387 3394 3396 3397
 3402 3404 3410 3416 3426 3428 3430 3436 3439 3450 3452 3453 3462 3465
 3489 3490 3496 3499 3505 3515 3526 3528 3538 3541 3545 3548 3550 3562
 3564 3578 3580 3583 3588 3597 3600 3605 3606 3609 3610 3614 3615 3630
 3631 3633 3638 3640 3642 3644 3645 3655 3659 3661 3669 3682 3684 3685
 3688 3693 3694 3703 3706 3711 3717 3725 3729 3730 3735 3736 3737 3738
 3742 3752 3753 3757 3761 3766 3770 3771 3772 3774 3779 3782 3794 3797
 3800 3801 3803 3805 3807 3810 3812 3817 3822 3828 3831]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.802, f1=0.802, auc=0.828, est=0.792, cfg={'log_reg__C': 0.001, 'log_reg__max_iter': 10000, 'log_reg__penalty': 'l2', 'log_reg__random_state': 16, 'log_reg__solver': 'newton-cg'} 

Accuracy: 0.791 (0.008) 

F1: 0.791 (0.008) 

AUC: 0.810 (0.012) 



CV with  svc  for  usa_vs_rest
train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   3    4    6    7   12   13   17   19   28   37   40   45   50   58
   60   65   72   75   79   83   89   93   94   98   99  102  107  108
  110  123  126  136  137  161  165  169  171  172  181  186  187  188
  194  195  201  203  205  210  219  220  224  230  254  255  256  262
  267  268  280  282  291  292  297  301  305  306  318  321  329  330
  331  349  351  359  364  366  368  372  382  386  393  397  398  399
  403  407  415  416  420  427  435  442  453  457  462  464  471  473
  481  487  494  495  516  517  518  525  534  535  540  541  544  546
  551  555  557  558  560  563  573  574  581  587  588  589  605  610
  630  632  636  650  661  662  664  666  678  685  700  701  702  705
  709  710  719  720  724  725  726  739  748  749  757  758  761  769
  771  772  773  779  781  784  790  791  796  797  799  804  808  812
  813  823  829  834  836  845  846  854  855  857  870  872  874  880
  891  893  899  902  906  909  913  929  931  941  943  945  953  955
  957  958  965  973  975  982  984  986  990  993  996 1004 1010 1012
 1020 1021 1026 1028 1032 1034 1035 1036 1038 1039 1044 1045 1050 1060
 1065 1070 1073 1074 1080 1089 1093 1100 1104 1120 1123 1125 1126 1128
 1131 1135 1140 1143 1144 1145 1156 1159 1162 1163 1164 1169 1176 1177
 1179 1189 1195 1196 1201 1206 1208 1213 1221 1232 1236 1239 1247 1248
 1270 1272 1273 1291 1301 1305 1328 1330 1333 1334 1336 1338 1342 1344
 1347 1349 1359 1373 1375 1386 1395 1400 1404 1406 1408 1419 1432 1433
 1435 1452 1456 1475 1488 1489 1497 1501 1502 1503 1508 1513 1519 1525
 1526 1533 1535 1536 1537 1551 1552 1554 1555 1563 1566 1587 1588 1593
 1595 1596 1597 1610 1621 1624 1626 1636 1641 1644 1648 1651 1653 1658
 1672 1675 1677 1687 1688 1698 1719 1723 1727 1729 1732 1734 1737 1742
 1744 1749 1751 1758 1759 1766 1768 1773 1777 1780 1781 1783 1784 1785
 1792 1802 1805 1808 1814 1825 1828 1829 1832 1836 1837 1847 1851 1852
 1856 1860 1870 1881 1885 1897 1905 1906 1907 1909 1918 1928 1929 1943
 1946 1947 1951 1953 1964 1973 1977 1999 2013 2017 2019 2031 2032 2037
 2039 2048 2051 2053 2059 2070 2078 2088 2095 2096 2099 2104 2106 2111
 2113 2123 2129 2132 2142 2146 2159 2162 2163 2165 2166 2167 2175 2193
 2201 2204 2206 2217 2225 2226 2227 2236 2241 2248 2249 2250 2264 2270
 2273 2279 2289 2293 2296 2297 2298 2301 2313 2316 2317 2320 2328 2340
 2341 2346 2347 2348 2354 2356 2358 2360 2367 2368 2369 2372 2375 2377
 2379 2389 2390 2392 2410 2414 2416 2418 2420 2423 2425 2429 2430 2437
 2438 2451 2458 2459 2462 2463 2466 2472 2481 2482 2496 2512 2538 2545
 2555 2560 2573 2578 2580 2583 2586 2596 2600 2604 2608 2610 2614 2618
 2624 2627 2629 2632 2639 2641 2642 2644 2645 2654 2655 2656 2670 2676
 2679 2687 2689 2695 2698 2699 2707 2710 2715 2723 2727 2728 2734 2740
 2744 2745 2746 2748 2750 2761 2762 2769 2771 2772 2774 2776 2781 2793
 2798 2800 2801 2807 2811 2812 2815 2817 2818 2822 2824 2828 2833 2837
 2838 2841 2849 2850 2852 2860 2861 2862 2863 2873 2879 2882 2883 2889
 2890 2893 2896 2902 2918 2920 2922 2925 2927 2934 2936 2938 2952 2967
 2972 2984 2988 2990 2999 3005 3020 3028 3039 3042 3051 3052 3053 3063
 3065 3080 3088 3103 3111 3122 3123 3130 3135 3137 3138 3140 3141 3143
 3145 3147 3150 3154 3178 3179 3183 3186 3189 3195 3196 3197 3198 3204
 3205 3207 3208 3210 3214 3215 3217 3222 3235 3243 3245 3246 3271 3274
 3279 3290 3296 3301 3304 3312 3316 3321 3326 3327 3335 3338 3346 3350
 3352 3356 3359 3361 3371 3378 3379 3380 3381 3385 3392 3398 3406 3407
 3417 3419 3422 3425 3432 3435 3442 3455 3459 3466 3469 3478 3479 3485
 3486 3488 3500 3502 3512 3518 3522 3532 3535 3539 3540 3542 3547 3549
 3558 3560 3569 3571 3573 3574 3577 3591 3595 3603 3608 3613 3624 3628
 3629 3635 3648 3650 3651 3652 3653 3658 3666 3672 3674 3695 3696 3697
 3707 3708 3719 3720 3726 3733 3734 3739 3741 3743 3785 3786 3787 3788
 3789 3792 3796 3802 3811 3813 3816 3818 3820 3824 3829 3833]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.740, f1=0.740, auc=0.841, est=0.788, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   0    1    2 ... 3832 3833 3835]
train_ix type:  int64
test_ix:  [  10   32   34   35   39   41   44   47   54   56   64   68   81   82
   87   91  103  111  119  120  125  132  133  134  138  146  151  154
  157  166  177  180  191  192  196  199  204  208  216  218  221  223
  227  228  231  233  236  241  248  250  257  260  270  273  275  283
  285  287  289  299  302  303  304  314  335  336  340  341  346  347
  365  367  370  383  390  394  396  414  422  425  428  429  432  434
  436  438  439  440  445  452  459  460  468  470  476  477  480  485
  486  490  492  499  501  508  509  510  521  526  527  533  536  543
  547  549  553  556  559  561  569  571  576  577  579  582  583  584
  586  592  595  598  599  600  602  607  613  616  620  623  627  635
  638  643  644  654  671  674  675  679  681  683  688  693  707  713
  729  730  733  737  747  751  756  764  767  774  777  783  785  788
  792  793  802  816  817  825  839  840  866  876  885  895  896  898
  911  916  918  921  925  926  927  932  933  936  937  946  954  959
  961  968  970  979  981  987  988  994 1000 1002 1006 1008 1009 1011
 1016 1017 1030 1040 1041 1043 1047 1051 1064 1068 1071 1077 1078 1082
 1087 1091 1097 1098 1103 1105 1108 1114 1132 1138 1141 1142 1149 1151
 1153 1167 1171 1173 1178 1194 1197 1215 1216 1217 1218 1219 1220 1223
 1224 1227 1230 1234 1237 1238 1241 1255 1263 1265 1266 1268 1271 1281
 1282 1293 1296 1299 1307 1316 1322 1329 1335 1339 1351 1352 1363 1377
 1379 1380 1385 1387 1391 1396 1398 1399 1402 1403 1409 1410 1412 1413
 1417 1421 1422 1426 1427 1441 1447 1448 1453 1457 1459 1463 1466 1467
 1468 1496 1504 1507 1518 1520 1524 1540 1542 1544 1545 1546 1548 1549
 1550 1556 1559 1562 1564 1573 1578 1579 1586 1592 1603 1607 1608 1613
 1614 1625 1631 1637 1642 1647 1649 1650 1657 1659 1661 1669 1670 1673
 1674 1678 1680 1684 1685 1690 1696 1707 1708 1710 1721 1728 1730 1735
 1736 1747 1748 1754 1760 1765 1767 1772 1776 1778 1782 1787 1789 1791
 1794 1796 1807 1813 1815 1819 1822 1823 1826 1833 1846 1848 1850 1854
 1858 1859 1865 1873 1882 1884 1891 1892 1895 1896 1899 1911 1913 1915
 1916 1919 1922 1924 1926 1930 1941 1944 1945 1950 1956 1957 1958 1959
 1962 1965 1966 1988 1991 1992 2006 2009 2010 2011 2018 2029 2030 2038
 2046 2054 2056 2066 2079 2093 2097 2101 2102 2105 2107 2114 2117 2118
 2119 2121 2126 2130 2135 2139 2150 2156 2158 2169 2173 2181 2182 2190
 2209 2213 2215 2223 2229 2231 2234 2238 2240 2245 2253 2256 2263 2274
 2282 2284 2292 2299 2303 2306 2307 2312 2315 2318 2322 2325 2329 2330
 2336 2338 2343 2351 2359 2361 2373 2378 2384 2399 2409 2415 2421 2426
 2456 2457 2469 2471 2474 2479 2480 2490 2494 2500 2508 2513 2514 2527
 2528 2532 2539 2543 2552 2553 2554 2572 2575 2576 2577 2582 2584 2589
 2597 2601 2603 2605 2606 2611 2619 2625 2630 2635 2637 2646 2650 2657
 2661 2662 2668 2673 2684 2691 2696 2703 2704 2708 2713 2720 2722 2724
 2726 2733 2736 2738 2739 2741 2742 2743 2751 2759 2775 2777 2779 2782
 2784 2785 2803 2816 2825 2827 2830 2842 2855 2856 2858 2870 2872 2874
 2876 2885 2888 2904 2906 2908 2928 2929 2933 2939 2943 2945 2946 2947
 2954 2961 2963 2975 2983 2987 2989 2991 2996 3000 3003 3009 3017 3018
 3019 3026 3031 3044 3048 3055 3056 3058 3059 3064 3066 3067 3068 3070
 3085 3090 3097 3106 3107 3116 3118 3126 3128 3133 3146 3152 3155 3165
 3169 3200 3216 3224 3231 3232 3237 3239 3242 3248 3249 3250 3253 3255
 3262 3264 3266 3267 3278 3286 3288 3292 3297 3299 3313 3323 3329 3334
 3339 3340 3344 3345 3348 3349 3355 3372 3386 3390 3391 3401 3405 3413
 3418 3420 3421 3437 3438 3441 3446 3447 3449 3451 3461 3468 3475 3476
 3482 3497 3501 3503 3513 3514 3520 3521 3524 3529 3531 3537 3546 3553
 3554 3556 3559 3566 3570 3572 3576 3582 3587 3619 3621 3636 3639 3643
 3646 3649 3654 3657 3660 3662 3673 3675 3677 3678 3679 3687 3698 3702
 3710 3712 3723 3728 3731 3732 3744 3747 3749 3750 3754 3758 3775 3778
 3783 3791 3793 3799 3804 3808 3819 3823 3825 3827 3834 3836]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.732, f1=0.732, auc=0.811, est=0.800, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   2    3    4 ... 3833 3834 3836]
train_ix type:  int64
test_ix:  [   0    1    8   11   16   21   23   24   30   38   48   49   51   53
   59   62   67   73   76   80   90  101  104  115  124  128  130  139
  140  148  149  158  160  167  173  176  182  189  190  198  200  202
  206  207  209  212  217  226  229  242  258  259  261  264  281  288
  293  294  309  325  332  338  345  348  350  353  361  363  369  375
  380  385  388  389  400  401  406  418  419  421  424  441  443  444
  446  447  448  456  478  484  488  493  498  503  507  512  513  514
  520  523  529  537  572  575  578  585  590  596  608  612  614  615
  619  625  628  631  634  639  640  642  645  653  655  660  669  670
  672  680  689  692  697  698  703  708  711  712  718  735  736  743
  745  750  760  763  766  768  778  787  800  801  805  807  809  820
  821  828  849  851  852  853  858  859  861  864  877  881  887  894
  900  904  917  919  920  924  934  935  940  948  972  976  977  983
  985  992  995  997 1001 1013 1015 1027 1037 1053 1054 1058 1059 1066
 1069 1081 1083 1084 1094 1102 1109 1112 1115 1117 1118 1122 1124 1129
 1136 1139 1146 1147 1152 1157 1161 1165 1172 1181 1183 1185 1186 1188
 1193 1204 1205 1210 1212 1225 1226 1228 1231 1233 1244 1245 1246 1249
 1252 1260 1262 1264 1269 1276 1283 1285 1286 1287 1289 1290 1292 1294
 1297 1308 1310 1317 1323 1325 1326 1348 1353 1354 1355 1357 1362 1364
 1365 1369 1381 1382 1384 1388 1392 1394 1397 1401 1407 1414 1415 1430
 1436 1438 1442 1443 1446 1450 1454 1461 1462 1470 1471 1477 1480 1481
 1482 1483 1487 1490 1494 1498 1500 1506 1509 1514 1515 1517 1529 1532
 1534 1539 1541 1558 1561 1565 1569 1570 1575 1577 1584 1589 1599 1601
 1604 1605 1606 1609 1611 1617 1623 1628 1629 1645 1646 1652 1654 1660
 1663 1664 1668 1681 1683 1691 1695 1697 1701 1702 1703 1713 1716 1720
 1724 1725 1726 1761 1790 1804 1810 1812 1816 1817 1818 1827 1855 1857
 1862 1863 1864 1866 1872 1875 1893 1894 1900 1902 1903 1908 1917 1921
 1925 1931 1933 1934 1937 1938 1960 1961 1967 1970 1986 1987 1990 1993
 1994 1995 2000 2001 2005 2008 2015 2016 2022 2024 2026 2027 2028 2034
 2035 2040 2043 2045 2049 2062 2064 2065 2068 2073 2074 2084 2085 2087
 2098 2108 2115 2124 2128 2133 2136 2149 2152 2155 2157 2161 2164 2168
 2170 2174 2177 2179 2183 2185 2188 2194 2211 2242 2243 2259 2268 2271
 2275 2276 2281 2290 2294 2295 2300 2308 2314 2323 2331 2333 2334 2344
 2345 2349 2350 2352 2353 2357 2362 2374 2383 2385 2387 2395 2396 2401
 2402 2403 2404 2411 2422 2424 2427 2433 2434 2435 2440 2443 2447 2448
 2453 2455 2461 2470 2473 2476 2483 2491 2495 2497 2510 2511 2517 2519
 2520 2526 2529 2530 2534 2535 2542 2544 2550 2558 2579 2585 2594 2607
 2609 2620 2621 2623 2633 2640 2651 2659 2665 2667 2671 2677 2681 2682
 2686 2688 2692 2694 2697 2700 2701 2702 2709 2711 2712 2717 2719 2721
 2725 2731 2732 2753 2755 2756 2764 2766 2768 2778 2786 2796 2802 2809
 2813 2820 2826 2834 2839 2866 2868 2869 2871 2881 2886 2891 2907 2913
 2916 2921 2930 2931 2935 2940 2942 2948 2950 2957 2960 2966 2969 2971
 2974 2977 2978 2995 2997 3007 3008 3014 3024 3025 3030 3034 3035 3037
 3041 3043 3054 3057 3061 3062 3071 3077 3083 3091 3093 3101 3108 3112
 3113 3114 3119 3120 3121 3124 3129 3131 3132 3142 3144 3151 3153 3161
 3162 3163 3166 3167 3172 3175 3181 3182 3185 3190 3191 3193 3201 3213
 3219 3223 3225 3226 3228 3229 3233 3240 3252 3256 3259 3261 3268 3269
 3273 3275 3276 3293 3294 3306 3309 3310 3315 3317 3319 3320 3324 3331
 3337 3341 3357 3365 3369 3370 3373 3375 3382 3388 3393 3395 3399 3400
 3403 3411 3415 3423 3424 3431 3433 3443 3444 3456 3464 3467 3471 3474
 3481 3484 3491 3495 3507 3508 3509 3510 3517 3519 3523 3533 3543 3544
 3551 3552 3555 3561 3565 3567 3568 3579 3585 3598 3604 3612 3617 3620
 3622 3626 3627 3637 3663 3664 3667 3668 3680 3681 3683 3686 3689 3690
 3692 3701 3704 3713 3716 3718 3740 3746 3748 3751 3759 3762 3763 3767
 3768 3773 3776 3777 3781 3809 3814 3815 3821 3832 3835]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.711, f1=0.711, auc=0.804, est=0.793, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   0    1    3 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   2    5    9   22   26   27   29   31   33   43   46   55   57   61
   66   69   74   78   84   85   88   97  106  113  117  121  127  131
  135  141  142  147  156  159  163  164  170  175  178  185  193  211
  215  234  237  238  239  244  245  251  265  274  276  277  278  279
  284  286  295  298  300  307  308  310  311  315  320  322  323  326
  328  339  352  354  355  358  360  371  374  381  384  387  392  395
  404  408  409  426  430  433  437  449  455  458  463  466  472  474
  479  482  483  491  496  500  502  504  511  528  530  531  538  548
  550  554  567  568  570  593  594  597  603  604  618  622  629  641
  646  647  649  659  663  673  682  686  694  699  722  723  731  740
  741  742  744  746  752  754  755  759  765  776  780  782  786  789
  798  810  815  819  824  826  827  830  831  833  841  842  847  860
  862  863  867  868  875  888  890  892  912  914  922  923  930  938
  942  950  951  952  962  966  969  974  978  991 1003 1005 1007 1014
 1023 1024 1029 1048 1055 1056 1057 1079 1085 1086 1090 1092 1101 1116
 1119 1127 1130 1134 1148 1158 1166 1180 1184 1190 1198 1199 1203 1209
 1211 1222 1229 1240 1242 1243 1250 1256 1257 1259 1267 1274 1279 1280
 1298 1302 1304 1314 1315 1318 1319 1320 1331 1340 1341 1343 1346 1356
 1358 1361 1367 1370 1371 1374 1378 1390 1405 1416 1418 1428 1429 1437
 1440 1444 1451 1458 1464 1476 1479 1505 1510 1511 1512 1516 1531 1543
 1553 1557 1567 1568 1574 1576 1583 1585 1591 1600 1602 1618 1633 1634
 1643 1655 1656 1662 1665 1671 1676 1682 1699 1704 1705 1709 1711 1714
 1718 1731 1733 1739 1743 1746 1750 1753 1755 1764 1769 1770 1775 1779
 1786 1788 1793 1797 1800 1809 1811 1821 1831 1839 1841 1842 1843 1853
 1861 1867 1868 1877 1886 1889 1901 1904 1910 1912 1923 1932 1935 1940
 1948 1952 1954 1955 1963 1969 1971 1972 1974 1975 1976 1978 1980 1984
 1985 1989 1997 1998 2002 2003 2004 2007 2014 2020 2021 2023 2036 2041
 2042 2044 2047 2050 2057 2058 2060 2061 2063 2067 2071 2075 2076 2080
 2081 2082 2083 2086 2089 2090 2094 2100 2109 2110 2112 2116 2120 2122
 2131 2134 2137 2138 2140 2143 2145 2147 2151 2153 2154 2160 2184 2187
 2191 2192 2196 2198 2199 2200 2202 2203 2207 2208 2212 2220 2228 2232
 2233 2235 2237 2239 2246 2252 2255 2262 2266 2272 2280 2285 2286 2287
 2291 2304 2305 2310 2319 2324 2332 2337 2339 2342 2355 2363 2364 2366
 2370 2371 2380 2381 2388 2391 2393 2397 2398 2406 2407 2412 2428 2431
 2436 2439 2441 2444 2449 2452 2454 2460 2467 2475 2478 2484 2485 2487
 2489 2493 2501 2503 2505 2507 2509 2515 2521 2522 2531 2540 2541 2546
 2551 2557 2563 2564 2567 2568 2569 2570 2571 2591 2593 2595 2598 2602
 2612 2613 2615 2616 2622 2626 2647 2649 2652 2660 2664 2672 2680 2683
 2685 2706 2718 2730 2735 2747 2749 2752 2757 2758 2765 2767 2773 2783
 2789 2790 2792 2794 2805 2810 2814 2819 2821 2823 2845 2846 2847 2848
 2851 2854 2857 2859 2864 2865 2867 2875 2878 2887 2894 2898 2899 2900
 2901 2903 2905 2909 2911 2912 2914 2915 2917 2924 2926 2932 2941 2951
 2956 2964 2968 2970 2973 2979 2985 2986 2992 2993 2998 3001 3004 3010
 3016 3027 3032 3033 3038 3040 3045 3060 3072 3073 3074 3075 3076 3078
 3079 3081 3084 3086 3089 3092 3095 3096 3105 3117 3127 3134 3148 3156
 3158 3160 3164 3171 3173 3176 3177 3180 3188 3192 3194 3202 3203 3211
 3218 3220 3221 3227 3247 3251 3254 3263 3272 3277 3282 3285 3289 3295
 3298 3300 3307 3308 3311 3322 3332 3333 3336 3343 3354 3358 3362 3363
 3366 3377 3384 3389 3408 3409 3412 3414 3427 3429 3434 3440 3445 3448
 3454 3457 3458 3460 3463 3470 3472 3473 3477 3480 3483 3487 3492 3493
 3494 3498 3504 3506 3511 3516 3525 3527 3530 3534 3536 3557 3563 3575
 3581 3584 3586 3589 3590 3592 3593 3594 3596 3599 3601 3602 3607 3611
 3616 3618 3623 3625 3632 3634 3641 3647 3656 3665 3670 3671 3676 3691
 3699 3700 3705 3709 3714 3715 3721 3722 3724 3727 3745 3755 3756 3760
 3764 3765 3769 3780 3784 3790 3795 3798 3806 3826 3830]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.722, f1=0.722, auc=0.822, est=0.785, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  114  116  118  122  129  143  144  145
  150  152  153  155  162  168  174  179  183  184  197  213  214  222
  225  232  235  240  243  246  247  249  252  253  263  266  269  271
  272  290  296  312  313  316  317  319  324  327  333  334  337  342
  343  344  356  357  362  373  376  377  378  379  391  402  405  410
  411  412  413  417  423  431  450  451  454  461  465  467  469  475
  489  497  505  506  515  519  522  524  532  539  542  545  552  562
  564  565  566  580  591  601  606  609  611  617  621  624  626  633
  637  648  651  652  656  657  658  665  667  668  676  677  684  687
  690  691  695  696  704  706  714  715  716  717  721  727  728  732
  734  738  753  762  770  775  794  795  803  806  811  814  818  822
  832  835  837  838  843  844  848  850  856  865  869  871  873  878
  879  882  883  884  886  889  897  901  903  905  907  908  910  915
  928  939  944  947  949  956  960  963  964  967  971  980  989  998
  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1061 1062 1063
 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110 1111 1113 1121
 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182 1187 1191 1192
 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275 1277 1278 1284
 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324 1327 1332 1337
 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411 1420 1423 1424
 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472 1473 1474 1478
 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523 1527 1528 1530
 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598 1612 1615 1616
 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666 1667 1679 1686
 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738 1740 1741 1745
 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799 1801 1803 1806 1820
 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869 1871 1874 1876 1878
 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927 1936 1939 1942 1949
 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052 2055 2069 2072 2077
 2091 2092 2103 2125 2127 2141 2144 2148 2171 2172 2176 2178 2180 2186
 2189 2195 2197 2205 2210 2214 2216 2218 2219 2221 2222 2224 2230 2244
 2247 2251 2254 2257 2258 2260 2261 2265 2267 2269 2277 2278 2283 2288
 2302 2309 2311 2321 2326 2327 2335 2365 2376 2382 2386 2394 2400 2405
 2408 2413 2417 2419 2432 2442 2445 2446 2450 2464 2465 2468 2477 2486
 2488 2492 2498 2499 2502 2504 2506 2516 2518 2523 2524 2525 2533 2536
 2537 2547 2548 2549 2556 2559 2561 2562 2565 2566 2574 2581 2587 2588
 2590 2592 2599 2617 2628 2631 2634 2636 2638 2643 2648 2653 2658 2663
 2666 2669 2674 2675 2678 2690 2693 2705 2714 2716 2729 2737 2754 2760
 2763 2770 2780 2787 2788 2791 2795 2797 2799 2804 2806 2808 2829 2831
 2832 2835 2836 2840 2843 2844 2853 2877 2880 2884 2892 2895 2897 2910
 2919 2923 2937 2944 2949 2953 2955 2958 2959 2962 2965 2976 2980 2981
 2982 2994 3002 3006 3011 3012 3013 3015 3021 3022 3023 3029 3036 3046
 3047 3049 3050 3069 3082 3087 3094 3098 3099 3100 3102 3104 3109 3110
 3115 3125 3136 3139 3149 3157 3159 3168 3170 3174 3184 3187 3199 3206
 3209 3212 3230 3234 3236 3238 3241 3244 3257 3258 3260 3265 3270 3280
 3281 3283 3284 3287 3291 3302 3303 3305 3314 3318 3325 3328 3330 3342
 3347 3351 3353 3360 3364 3367 3368 3374 3376 3383 3387 3394 3396 3397
 3402 3404 3410 3416 3426 3428 3430 3436 3439 3450 3452 3453 3462 3465
 3489 3490 3496 3499 3505 3515 3526 3528 3538 3541 3545 3548 3550 3562
 3564 3578 3580 3583 3588 3597 3600 3605 3606 3609 3610 3614 3615 3630
 3631 3633 3638 3640 3642 3644 3645 3655 3659 3661 3669 3682 3684 3685
 3688 3693 3694 3703 3706 3711 3717 3725 3729 3730 3735 3736 3737 3738
 3742 3752 3753 3757 3761 3766 3770 3771 3772 3774 3779 3782 3794 3797
 3800 3801 3803 3805 3807 3810 3812 3817 3822 3828 3831]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.738, f1=0.738, auc=0.855, est=0.778, cfg={'svc__C': 1.0, 'svc__kernel': 'rbf', 'svc__probability': True, 'svc__random_state': 16} 

Accuracy: 0.728 (0.011) 

F1: 0.728 (0.011) 

AUC: 0.827 (0.019) 



CV with  ran_for  for  usa_vs_rest
train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   3    4    6    7   12   13   17   19   28   37   40   45   50   58
   60   65   72   75   79   83   89   93   94   98   99  102  107  108
  110  123  126  136  137  161  165  169  171  172  181  186  187  188
  194  195  201  203  205  210  219  220  224  230  254  255  256  262
  267  268  280  282  291  292  297  301  305  306  318  321  329  330
  331  349  351  359  364  366  368  372  382  386  393  397  398  399
  403  407  415  416  420  427  435  442  453  457  462  464  471  473
  481  487  494  495  516  517  518  525  534  535  540  541  544  546
  551  555  557  558  560  563  573  574  581  587  588  589  605  610
  630  632  636  650  661  662  664  666  678  685  700  701  702  705
  709  710  719  720  724  725  726  739  748  749  757  758  761  769
  771  772  773  779  781  784  790  791  796  797  799  804  808  812
  813  823  829  834  836  845  846  854  855  857  870  872  874  880
  891  893  899  902  906  909  913  929  931  941  943  945  953  955
  957  958  965  973  975  982  984  986  990  993  996 1004 1010 1012
 1020 1021 1026 1028 1032 1034 1035 1036 1038 1039 1044 1045 1050 1060
 1065 1070 1073 1074 1080 1089 1093 1100 1104 1120 1123 1125 1126 1128
 1131 1135 1140 1143 1144 1145 1156 1159 1162 1163 1164 1169 1176 1177
 1179 1189 1195 1196 1201 1206 1208 1213 1221 1232 1236 1239 1247 1248
 1270 1272 1273 1291 1301 1305 1328 1330 1333 1334 1336 1338 1342 1344
 1347 1349 1359 1373 1375 1386 1395 1400 1404 1406 1408 1419 1432 1433
 1435 1452 1456 1475 1488 1489 1497 1501 1502 1503 1508 1513 1519 1525
 1526 1533 1535 1536 1537 1551 1552 1554 1555 1563 1566 1587 1588 1593
 1595 1596 1597 1610 1621 1624 1626 1636 1641 1644 1648 1651 1653 1658
 1672 1675 1677 1687 1688 1698 1719 1723 1727 1729 1732 1734 1737 1742
 1744 1749 1751 1758 1759 1766 1768 1773 1777 1780 1781 1783 1784 1785
 1792 1802 1805 1808 1814 1825 1828 1829 1832 1836 1837 1847 1851 1852
 1856 1860 1870 1881 1885 1897 1905 1906 1907 1909 1918 1928 1929 1943
 1946 1947 1951 1953 1964 1973 1977 1999 2013 2017 2019 2031 2032 2037
 2039 2048 2051 2053 2059 2070 2078 2088 2095 2096 2099 2104 2106 2111
 2113 2123 2129 2132 2142 2146 2159 2162 2163 2165 2166 2167 2175 2193
 2201 2204 2206 2217 2225 2226 2227 2236 2241 2248 2249 2250 2264 2270
 2273 2279 2289 2293 2296 2297 2298 2301 2313 2316 2317 2320 2328 2340
 2341 2346 2347 2348 2354 2356 2358 2360 2367 2368 2369 2372 2375 2377
 2379 2389 2390 2392 2410 2414 2416 2418 2420 2423 2425 2429 2430 2437
 2438 2451 2458 2459 2462 2463 2466 2472 2481 2482 2496 2512 2538 2545
 2555 2560 2573 2578 2580 2583 2586 2596 2600 2604 2608 2610 2614 2618
 2624 2627 2629 2632 2639 2641 2642 2644 2645 2654 2655 2656 2670 2676
 2679 2687 2689 2695 2698 2699 2707 2710 2715 2723 2727 2728 2734 2740
 2744 2745 2746 2748 2750 2761 2762 2769 2771 2772 2774 2776 2781 2793
 2798 2800 2801 2807 2811 2812 2815 2817 2818 2822 2824 2828 2833 2837
 2838 2841 2849 2850 2852 2860 2861 2862 2863 2873 2879 2882 2883 2889
 2890 2893 2896 2902 2918 2920 2922 2925 2927 2934 2936 2938 2952 2967
 2972 2984 2988 2990 2999 3005 3020 3028 3039 3042 3051 3052 3053 3063
 3065 3080 3088 3103 3111 3122 3123 3130 3135 3137 3138 3140 3141 3143
 3145 3147 3150 3154 3178 3179 3183 3186 3189 3195 3196 3197 3198 3204
 3205 3207 3208 3210 3214 3215 3217 3222 3235 3243 3245 3246 3271 3274
 3279 3290 3296 3301 3304 3312 3316 3321 3326 3327 3335 3338 3346 3350
 3352 3356 3359 3361 3371 3378 3379 3380 3381 3385 3392 3398 3406 3407
 3417 3419 3422 3425 3432 3435 3442 3455 3459 3466 3469 3478 3479 3485
 3486 3488 3500 3502 3512 3518 3522 3532 3535 3539 3540 3542 3547 3549
 3558 3560 3569 3571 3573 3574 3577 3591 3595 3603 3608 3613 3624 3628
 3629 3635 3648 3650 3651 3652 3653 3658 3666 3672 3674 3695 3696 3697
 3707 3708 3719 3720 3726 3733 3734 3739 3741 3743 3785 3786 3787 3788
 3789 3792 3796 3802 3811 3813 3816 3818 3820 3824 3829 3833]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.669, f1=0.669, auc=0.787, est=0.646, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   0    1    2 ... 3832 3833 3835]
train_ix type:  int64
test_ix:  [  10   32   34   35   39   41   44   47   54   56   64   68   81   82
   87   91  103  111  119  120  125  132  133  134  138  146  151  154
  157  166  177  180  191  192  196  199  204  208  216  218  221  223
  227  228  231  233  236  241  248  250  257  260  270  273  275  283
  285  287  289  299  302  303  304  314  335  336  340  341  346  347
  365  367  370  383  390  394  396  414  422  425  428  429  432  434
  436  438  439  440  445  452  459  460  468  470  476  477  480  485
  486  490  492  499  501  508  509  510  521  526  527  533  536  543
  547  549  553  556  559  561  569  571  576  577  579  582  583  584
  586  592  595  598  599  600  602  607  613  616  620  623  627  635
  638  643  644  654  671  674  675  679  681  683  688  693  707  713
  729  730  733  737  747  751  756  764  767  774  777  783  785  788
  792  793  802  816  817  825  839  840  866  876  885  895  896  898
  911  916  918  921  925  926  927  932  933  936  937  946  954  959
  961  968  970  979  981  987  988  994 1000 1002 1006 1008 1009 1011
 1016 1017 1030 1040 1041 1043 1047 1051 1064 1068 1071 1077 1078 1082
 1087 1091 1097 1098 1103 1105 1108 1114 1132 1138 1141 1142 1149 1151
 1153 1167 1171 1173 1178 1194 1197 1215 1216 1217 1218 1219 1220 1223
 1224 1227 1230 1234 1237 1238 1241 1255 1263 1265 1266 1268 1271 1281
 1282 1293 1296 1299 1307 1316 1322 1329 1335 1339 1351 1352 1363 1377
 1379 1380 1385 1387 1391 1396 1398 1399 1402 1403 1409 1410 1412 1413
 1417 1421 1422 1426 1427 1441 1447 1448 1453 1457 1459 1463 1466 1467
 1468 1496 1504 1507 1518 1520 1524 1540 1542 1544 1545 1546 1548 1549
 1550 1556 1559 1562 1564 1573 1578 1579 1586 1592 1603 1607 1608 1613
 1614 1625 1631 1637 1642 1647 1649 1650 1657 1659 1661 1669 1670 1673
 1674 1678 1680 1684 1685 1690 1696 1707 1708 1710 1721 1728 1730 1735
 1736 1747 1748 1754 1760 1765 1767 1772 1776 1778 1782 1787 1789 1791
 1794 1796 1807 1813 1815 1819 1822 1823 1826 1833 1846 1848 1850 1854
 1858 1859 1865 1873 1882 1884 1891 1892 1895 1896 1899 1911 1913 1915
 1916 1919 1922 1924 1926 1930 1941 1944 1945 1950 1956 1957 1958 1959
 1962 1965 1966 1988 1991 1992 2006 2009 2010 2011 2018 2029 2030 2038
 2046 2054 2056 2066 2079 2093 2097 2101 2102 2105 2107 2114 2117 2118
 2119 2121 2126 2130 2135 2139 2150 2156 2158 2169 2173 2181 2182 2190
 2209 2213 2215 2223 2229 2231 2234 2238 2240 2245 2253 2256 2263 2274
 2282 2284 2292 2299 2303 2306 2307 2312 2315 2318 2322 2325 2329 2330
 2336 2338 2343 2351 2359 2361 2373 2378 2384 2399 2409 2415 2421 2426
 2456 2457 2469 2471 2474 2479 2480 2490 2494 2500 2508 2513 2514 2527
 2528 2532 2539 2543 2552 2553 2554 2572 2575 2576 2577 2582 2584 2589
 2597 2601 2603 2605 2606 2611 2619 2625 2630 2635 2637 2646 2650 2657
 2661 2662 2668 2673 2684 2691 2696 2703 2704 2708 2713 2720 2722 2724
 2726 2733 2736 2738 2739 2741 2742 2743 2751 2759 2775 2777 2779 2782
 2784 2785 2803 2816 2825 2827 2830 2842 2855 2856 2858 2870 2872 2874
 2876 2885 2888 2904 2906 2908 2928 2929 2933 2939 2943 2945 2946 2947
 2954 2961 2963 2975 2983 2987 2989 2991 2996 3000 3003 3009 3017 3018
 3019 3026 3031 3044 3048 3055 3056 3058 3059 3064 3066 3067 3068 3070
 3085 3090 3097 3106 3107 3116 3118 3126 3128 3133 3146 3152 3155 3165
 3169 3200 3216 3224 3231 3232 3237 3239 3242 3248 3249 3250 3253 3255
 3262 3264 3266 3267 3278 3286 3288 3292 3297 3299 3313 3323 3329 3334
 3339 3340 3344 3345 3348 3349 3355 3372 3386 3390 3391 3401 3405 3413
 3418 3420 3421 3437 3438 3441 3446 3447 3449 3451 3461 3468 3475 3476
 3482 3497 3501 3503 3513 3514 3520 3521 3524 3529 3531 3537 3546 3553
 3554 3556 3559 3566 3570 3572 3576 3582 3587 3619 3621 3636 3639 3643
 3646 3649 3654 3657 3660 3662 3673 3675 3677 3678 3679 3687 3698 3702
 3710 3712 3723 3728 3731 3732 3744 3747 3749 3750 3754 3758 3775 3778
 3783 3791 3793 3799 3804 3808 3819 3823 3825 3827 3834 3836]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.643, f1=0.643, auc=0.766, est=0.652, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   2    3    4 ... 3833 3834 3836]
train_ix type:  int64
test_ix:  [   0    1    8   11   16   21   23   24   30   38   48   49   51   53
   59   62   67   73   76   80   90  101  104  115  124  128  130  139
  140  148  149  158  160  167  173  176  182  189  190  198  200  202
  206  207  209  212  217  226  229  242  258  259  261  264  281  288
  293  294  309  325  332  338  345  348  350  353  361  363  369  375
  380  385  388  389  400  401  406  418  419  421  424  441  443  444
  446  447  448  456  478  484  488  493  498  503  507  512  513  514
  520  523  529  537  572  575  578  585  590  596  608  612  614  615
  619  625  628  631  634  639  640  642  645  653  655  660  669  670
  672  680  689  692  697  698  703  708  711  712  718  735  736  743
  745  750  760  763  766  768  778  787  800  801  805  807  809  820
  821  828  849  851  852  853  858  859  861  864  877  881  887  894
  900  904  917  919  920  924  934  935  940  948  972  976  977  983
  985  992  995  997 1001 1013 1015 1027 1037 1053 1054 1058 1059 1066
 1069 1081 1083 1084 1094 1102 1109 1112 1115 1117 1118 1122 1124 1129
 1136 1139 1146 1147 1152 1157 1161 1165 1172 1181 1183 1185 1186 1188
 1193 1204 1205 1210 1212 1225 1226 1228 1231 1233 1244 1245 1246 1249
 1252 1260 1262 1264 1269 1276 1283 1285 1286 1287 1289 1290 1292 1294
 1297 1308 1310 1317 1323 1325 1326 1348 1353 1354 1355 1357 1362 1364
 1365 1369 1381 1382 1384 1388 1392 1394 1397 1401 1407 1414 1415 1430
 1436 1438 1442 1443 1446 1450 1454 1461 1462 1470 1471 1477 1480 1481
 1482 1483 1487 1490 1494 1498 1500 1506 1509 1514 1515 1517 1529 1532
 1534 1539 1541 1558 1561 1565 1569 1570 1575 1577 1584 1589 1599 1601
 1604 1605 1606 1609 1611 1617 1623 1628 1629 1645 1646 1652 1654 1660
 1663 1664 1668 1681 1683 1691 1695 1697 1701 1702 1703 1713 1716 1720
 1724 1725 1726 1761 1790 1804 1810 1812 1816 1817 1818 1827 1855 1857
 1862 1863 1864 1866 1872 1875 1893 1894 1900 1902 1903 1908 1917 1921
 1925 1931 1933 1934 1937 1938 1960 1961 1967 1970 1986 1987 1990 1993
 1994 1995 2000 2001 2005 2008 2015 2016 2022 2024 2026 2027 2028 2034
 2035 2040 2043 2045 2049 2062 2064 2065 2068 2073 2074 2084 2085 2087
 2098 2108 2115 2124 2128 2133 2136 2149 2152 2155 2157 2161 2164 2168
 2170 2174 2177 2179 2183 2185 2188 2194 2211 2242 2243 2259 2268 2271
 2275 2276 2281 2290 2294 2295 2300 2308 2314 2323 2331 2333 2334 2344
 2345 2349 2350 2352 2353 2357 2362 2374 2383 2385 2387 2395 2396 2401
 2402 2403 2404 2411 2422 2424 2427 2433 2434 2435 2440 2443 2447 2448
 2453 2455 2461 2470 2473 2476 2483 2491 2495 2497 2510 2511 2517 2519
 2520 2526 2529 2530 2534 2535 2542 2544 2550 2558 2579 2585 2594 2607
 2609 2620 2621 2623 2633 2640 2651 2659 2665 2667 2671 2677 2681 2682
 2686 2688 2692 2694 2697 2700 2701 2702 2709 2711 2712 2717 2719 2721
 2725 2731 2732 2753 2755 2756 2764 2766 2768 2778 2786 2796 2802 2809
 2813 2820 2826 2834 2839 2866 2868 2869 2871 2881 2886 2891 2907 2913
 2916 2921 2930 2931 2935 2940 2942 2948 2950 2957 2960 2966 2969 2971
 2974 2977 2978 2995 2997 3007 3008 3014 3024 3025 3030 3034 3035 3037
 3041 3043 3054 3057 3061 3062 3071 3077 3083 3091 3093 3101 3108 3112
 3113 3114 3119 3120 3121 3124 3129 3131 3132 3142 3144 3151 3153 3161
 3162 3163 3166 3167 3172 3175 3181 3182 3185 3190 3191 3193 3201 3213
 3219 3223 3225 3226 3228 3229 3233 3240 3252 3256 3259 3261 3268 3269
 3273 3275 3276 3293 3294 3306 3309 3310 3315 3317 3319 3320 3324 3331
 3337 3341 3357 3365 3369 3370 3373 3375 3382 3388 3393 3395 3399 3400
 3403 3411 3415 3423 3424 3431 3433 3443 3444 3456 3464 3467 3471 3474
 3481 3484 3491 3495 3507 3508 3509 3510 3517 3519 3523 3533 3543 3544
 3551 3552 3555 3561 3565 3567 3568 3579 3585 3598 3604 3612 3617 3620
 3622 3626 3627 3637 3663 3664 3667 3668 3680 3681 3683 3686 3689 3690
 3692 3701 3704 3713 3716 3718 3740 3746 3748 3751 3759 3762 3763 3767
 3768 3773 3776 3777 3781 3809 3814 3815 3821 3832 3835]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.651, f1=0.651, auc=0.795, est=0.650, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   0    1    3 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [   2    5    9   22   26   27   29   31   33   43   46   55   57   61
   66   69   74   78   84   85   88   97  106  113  117  121  127  131
  135  141  142  147  156  159  163  164  170  175  178  185  193  211
  215  234  237  238  239  244  245  251  265  274  276  277  278  279
  284  286  295  298  300  307  308  310  311  315  320  322  323  326
  328  339  352  354  355  358  360  371  374  381  384  387  392  395
  404  408  409  426  430  433  437  449  455  458  463  466  472  474
  479  482  483  491  496  500  502  504  511  528  530  531  538  548
  550  554  567  568  570  593  594  597  603  604  618  622  629  641
  646  647  649  659  663  673  682  686  694  699  722  723  731  740
  741  742  744  746  752  754  755  759  765  776  780  782  786  789
  798  810  815  819  824  826  827  830  831  833  841  842  847  860
  862  863  867  868  875  888  890  892  912  914  922  923  930  938
  942  950  951  952  962  966  969  974  978  991 1003 1005 1007 1014
 1023 1024 1029 1048 1055 1056 1057 1079 1085 1086 1090 1092 1101 1116
 1119 1127 1130 1134 1148 1158 1166 1180 1184 1190 1198 1199 1203 1209
 1211 1222 1229 1240 1242 1243 1250 1256 1257 1259 1267 1274 1279 1280
 1298 1302 1304 1314 1315 1318 1319 1320 1331 1340 1341 1343 1346 1356
 1358 1361 1367 1370 1371 1374 1378 1390 1405 1416 1418 1428 1429 1437
 1440 1444 1451 1458 1464 1476 1479 1505 1510 1511 1512 1516 1531 1543
 1553 1557 1567 1568 1574 1576 1583 1585 1591 1600 1602 1618 1633 1634
 1643 1655 1656 1662 1665 1671 1676 1682 1699 1704 1705 1709 1711 1714
 1718 1731 1733 1739 1743 1746 1750 1753 1755 1764 1769 1770 1775 1779
 1786 1788 1793 1797 1800 1809 1811 1821 1831 1839 1841 1842 1843 1853
 1861 1867 1868 1877 1886 1889 1901 1904 1910 1912 1923 1932 1935 1940
 1948 1952 1954 1955 1963 1969 1971 1972 1974 1975 1976 1978 1980 1984
 1985 1989 1997 1998 2002 2003 2004 2007 2014 2020 2021 2023 2036 2041
 2042 2044 2047 2050 2057 2058 2060 2061 2063 2067 2071 2075 2076 2080
 2081 2082 2083 2086 2089 2090 2094 2100 2109 2110 2112 2116 2120 2122
 2131 2134 2137 2138 2140 2143 2145 2147 2151 2153 2154 2160 2184 2187
 2191 2192 2196 2198 2199 2200 2202 2203 2207 2208 2212 2220 2228 2232
 2233 2235 2237 2239 2246 2252 2255 2262 2266 2272 2280 2285 2286 2287
 2291 2304 2305 2310 2319 2324 2332 2337 2339 2342 2355 2363 2364 2366
 2370 2371 2380 2381 2388 2391 2393 2397 2398 2406 2407 2412 2428 2431
 2436 2439 2441 2444 2449 2452 2454 2460 2467 2475 2478 2484 2485 2487
 2489 2493 2501 2503 2505 2507 2509 2515 2521 2522 2531 2540 2541 2546
 2551 2557 2563 2564 2567 2568 2569 2570 2571 2591 2593 2595 2598 2602
 2612 2613 2615 2616 2622 2626 2647 2649 2652 2660 2664 2672 2680 2683
 2685 2706 2718 2730 2735 2747 2749 2752 2757 2758 2765 2767 2773 2783
 2789 2790 2792 2794 2805 2810 2814 2819 2821 2823 2845 2846 2847 2848
 2851 2854 2857 2859 2864 2865 2867 2875 2878 2887 2894 2898 2899 2900
 2901 2903 2905 2909 2911 2912 2914 2915 2917 2924 2926 2932 2941 2951
 2956 2964 2968 2970 2973 2979 2985 2986 2992 2993 2998 3001 3004 3010
 3016 3027 3032 3033 3038 3040 3045 3060 3072 3073 3074 3075 3076 3078
 3079 3081 3084 3086 3089 3092 3095 3096 3105 3117 3127 3134 3148 3156
 3158 3160 3164 3171 3173 3176 3177 3180 3188 3192 3194 3202 3203 3211
 3218 3220 3221 3227 3247 3251 3254 3263 3272 3277 3282 3285 3289 3295
 3298 3300 3307 3308 3311 3322 3332 3333 3336 3343 3354 3358 3362 3363
 3366 3377 3384 3389 3408 3409 3412 3414 3427 3429 3434 3440 3445 3448
 3454 3457 3458 3460 3463 3470 3472 3473 3477 3480 3483 3487 3492 3493
 3494 3498 3504 3506 3511 3516 3525 3527 3530 3534 3536 3557 3563 3575
 3581 3584 3586 3589 3590 3592 3593 3594 3596 3599 3601 3602 3607 3611
 3616 3618 3623 3625 3632 3634 3641 3647 3656 3665 3670 3671 3676 3691
 3699 3700 3705 3709 3714 3715 3721 3722 3724 3727 3745 3755 3756 3760
 3764 3765 3769 3780 3784 3790 3795 3798 3806 3826 3830]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.647, f1=0.647, auc=0.823, est=0.651, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

train_ix:  [   0    1    2 ... 3834 3835 3836]
train_ix type:  int64
test_ix:  [  14   15   18   20   25   36   42   52   63   70   71   77   86   92
   95   96  100  105  109  112  114  116  118  122  129  143  144  145
  150  152  153  155  162  168  174  179  183  184  197  213  214  222
  225  232  235  240  243  246  247  249  252  253  263  266  269  271
  272  290  296  312  313  316  317  319  324  327  333  334  337  342
  343  344  356  357  362  373  376  377  378  379  391  402  405  410
  411  412  413  417  423  431  450  451  454  461  465  467  469  475
  489  497  505  506  515  519  522  524  532  539  542  545  552  562
  564  565  566  580  591  601  606  609  611  617  621  624  626  633
  637  648  651  652  656  657  658  665  667  668  676  677  684  687
  690  691  695  696  704  706  714  715  716  717  721  727  728  732
  734  738  753  762  770  775  794  795  803  806  811  814  818  822
  832  835  837  838  843  844  848  850  856  865  869  871  873  878
  879  882  883  884  886  889  897  901  903  905  907  908  910  915
  928  939  944  947  949  956  960  963  964  967  971  980  989  998
  999 1018 1019 1022 1025 1031 1033 1042 1046 1049 1052 1061 1062 1063
 1067 1072 1075 1076 1088 1095 1096 1099 1106 1107 1110 1111 1113 1121
 1133 1137 1150 1154 1155 1160 1168 1170 1174 1175 1182 1187 1191 1192
 1200 1202 1207 1214 1235 1251 1253 1254 1258 1261 1275 1277 1278 1284
 1288 1295 1300 1303 1306 1309 1311 1312 1313 1321 1324 1327 1332 1337
 1345 1350 1360 1366 1368 1372 1376 1383 1389 1393 1411 1420 1423 1424
 1425 1431 1434 1439 1445 1449 1455 1460 1465 1469 1472 1473 1474 1478
 1484 1485 1486 1491 1492 1493 1495 1499 1521 1522 1523 1527 1528 1530
 1538 1547 1560 1571 1572 1580 1581 1582 1590 1594 1598 1612 1615 1616
 1619 1620 1622 1627 1630 1632 1635 1638 1639 1640 1666 1667 1679 1686
 1689 1692 1693 1694 1700 1706 1712 1715 1717 1722 1738 1740 1741 1745
 1752 1756 1757 1762 1763 1771 1774 1795 1798 1799 1801 1803 1806 1820
 1824 1830 1834 1835 1838 1840 1844 1845 1849 1869 1871 1874 1876 1878
 1879 1880 1883 1887 1888 1890 1898 1914 1920 1927 1936 1939 1942 1949
 1968 1979 1981 1982 1983 1996 2012 2025 2033 2052 2055 2069 2072 2077
 2091 2092 2103 2125 2127 2141 2144 2148 2171 2172 2176 2178 2180 2186
 2189 2195 2197 2205 2210 2214 2216 2218 2219 2221 2222 2224 2230 2244
 2247 2251 2254 2257 2258 2260 2261 2265 2267 2269 2277 2278 2283 2288
 2302 2309 2311 2321 2326 2327 2335 2365 2376 2382 2386 2394 2400 2405
 2408 2413 2417 2419 2432 2442 2445 2446 2450 2464 2465 2468 2477 2486
 2488 2492 2498 2499 2502 2504 2506 2516 2518 2523 2524 2525 2533 2536
 2537 2547 2548 2549 2556 2559 2561 2562 2565 2566 2574 2581 2587 2588
 2590 2592 2599 2617 2628 2631 2634 2636 2638 2643 2648 2653 2658 2663
 2666 2669 2674 2675 2678 2690 2693 2705 2714 2716 2729 2737 2754 2760
 2763 2770 2780 2787 2788 2791 2795 2797 2799 2804 2806 2808 2829 2831
 2832 2835 2836 2840 2843 2844 2853 2877 2880 2884 2892 2895 2897 2910
 2919 2923 2937 2944 2949 2953 2955 2958 2959 2962 2965 2976 2980 2981
 2982 2994 3002 3006 3011 3012 3013 3015 3021 3022 3023 3029 3036 3046
 3047 3049 3050 3069 3082 3087 3094 3098 3099 3100 3102 3104 3109 3110
 3115 3125 3136 3139 3149 3157 3159 3168 3170 3174 3184 3187 3199 3206
 3209 3212 3230 3234 3236 3238 3241 3244 3257 3258 3260 3265 3270 3280
 3281 3283 3284 3287 3291 3302 3303 3305 3314 3318 3325 3328 3330 3342
 3347 3351 3353 3360 3364 3367 3368 3374 3376 3383 3387 3394 3396 3397
 3402 3404 3410 3416 3426 3428 3430 3436 3439 3450 3452 3453 3462 3465
 3489 3490 3496 3499 3505 3515 3526 3528 3538 3541 3545 3548 3550 3562
 3564 3578 3580 3583 3588 3597 3600 3605 3606 3609 3610 3614 3615 3630
 3631 3633 3638 3640 3642 3644 3645 3655 3659 3661 3669 3682 3684 3685
 3688 3693 3694 3703 3706 3711 3717 3725 3729 3730 3735 3736 3737 3738
 3742 3752 3753 3757 3761 3766 3770 3771 3772 3774 3779 3782 3794 3797
 3800 3801 3803 3805 3807 3810 3812 3817 3822 3828 3831]
X_r1.index:  Int64Index([   243,    254,    383,    487,    507,    741,    882,    929,
              1131,   1211,
            ...
            277928, 277965, 278137, 278144, 278188, 278418, 278535, 278582,
            278633, 278843],
           dtype='int64', length=3837)
X_r1.index types:  int64
y_train unique len:  2
y_test unique len:  2
set()
>acc=0.643, f1=0.643, auc=0.821, est=0.652, cfg={'ran_for__max_features': 10, 'ran_for__min_samples_leaf': 2, 'ran_for__min_samples_split': 10, 'ran_for__n_estimators': 100, 'ran_for__random_state': 16} 

Accuracy: 0.651 (0.010) 

F1: 0.651 (0.010) 

AUC: 0.798 (0.021) 

Linux idun-03-20 4.18.0-193.el8.x86_64 #1 SMP Fri May 8 10:59:10 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux
